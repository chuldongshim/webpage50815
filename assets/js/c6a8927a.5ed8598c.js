"use strict";(self.webpackChunkwebpage_re=self.webpackChunkwebpage_re||[]).push([[1970],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),m=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),_=m(a),c=n,k=_["".concat(o,".").concat(c)]||_[c]||u[c]||l;return a?r.createElement(k,i(i({ref:t},s),{},{components:a})):r.createElement(k,i({ref:t},s))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=_;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var m=2;m<l;m++)i[m]=a[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}_.displayName="MDXCreateElement"},880:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var r=a(7462),n=(a(7294),a(3905));const l={id:"esp32_hw",title:"\ud558\ub4dc\uc6e8\uc5b4"},i=void 0,p={unversionedId:"sideprj/hybrid/esp32_hw",id:"sideprj/hybrid/esp32_hw",title:"\ud558\ub4dc\uc6e8\uc5b4",description:"---",source:"@site/docs/3_sideprj/4_hybrid/c_esp32_hw.md",sourceDirName:"3_sideprj/4_hybrid",slug:"/sideprj/hybrid/esp32_hw",permalink:"/webpage50815/docs/sideprj/hybrid/esp32_hw",draft:!1,editUrl:"https://github.com/chuldongshim/webpage50815/docs/3_sideprj/4_hybrid/c_esp32_hw.md",tags:[],version:"current",frontMatter:{id:"esp32_hw",title:"\ud558\ub4dc\uc6e8\uc5b4"}},o={},m=[{value:"\uc0ac\uc591",id:"\uc0ac\uc591",level:2},{value:"MCU",id:"mcu",level:3},{value:"MCU\ube44\uad50",id:"mcu\ube44\uad50",level:3},{value:"\ub370\uc774\ud130\uc2dc\ud2b8",id:"\ub370\uc774\ud130\uc2dc\ud2b8",level:4},{value:"\ud38c\uc6e8\uc5b4 \ucc38\uace0\uc790\ub8cc",id:"\ud38c\uc6e8\uc5b4-\ucc38\uace0\uc790\ub8cc",level:4},{value:"\ud38c\uc6e8\uc5b4",id:"\ud38c\uc6e8\uc5b4",level:2},{value:"\ubd80\ud305\uacfc\uc815",id:"\ubd80\ud305\uacfc\uc815",level:3},{value:"FW_BLE",id:"fw_ble",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860",level:4},{value:"BLE",id:"ble",level:5},{value:"\ube14\ub8e8\ud22c\uc2a4 \ud504\ub85c\ud30c\uc77c",id:"\ube14\ub8e8\ud22c\uc2a4-\ud504\ub85c\ud30c\uc77c",level:5},{value:"\ube44\ucf58",id:"\ube44\ucf58",level:5},{value:"BLE\uad6c\uc131",id:"ble\uad6c\uc131",level:5},{value:"\uae30\ub2a5",id:"\uae30\ub2a5",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778",level:4},{value:"bt_spp_acceptor",id:"bt_spp_acceptor",level:5},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc",level:4},{value:"BLE \uac1c\ub150",id:"ble-\uac1c\ub150",level:5},{value:"\uc544\ub450\uc774\ub178",id:"\uc544\ub450\uc774\ub178",level:5},{value:"ESP-IDF",id:"esp-idf",level:5},{value:"Nordic nRF51-DK",id:"nordic-nrf51-dk",level:5},{value:"FW_BLE_UART",id:"fw_ble_uart",level:3},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-1",level:4},{value:"\ud504\ub85c\uc81d\ud2b8 \uc774\ub984 \ubcc0\uacbd",id:"\ud504\ub85c\uc81d\ud2b8-\uc774\ub984-\ubcc0\uacbd",level:5},{value:"menuconfig\uc5d0 UART\uc124\uc815 \ucd94\uac00",id:"menuconfig\uc5d0-uart\uc124\uc815-\ucd94\uac00",level:5},{value:"\ucf54\ub4dc\uad6c\ud604",id:"\ucf54\ub4dc\uad6c\ud604",level:5},{value:"FW_CAN",id:"fw_can",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860-1",level:4},{value:"CAN\uad6c\uc131",id:"can\uad6c\uc131",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4-1",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-1",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-2",level:4},{value:"timer_group",id:"timer_group",level:5},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc-1",level:4},{value:"FW_GPIO",id:"fw_gpio",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860-2",level:4},{value:"\uae30\ub2a5",id:"\uae30\ub2a5-1",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4-2",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-2",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-3",level:4},{value:"generic_gpio",id:"generic_gpio",level:5},{value:"\ubd84\uc11d",id:"\ubd84\uc11d",level:4},{value:"\ud504\ub85c\uc81d\ud2b8 \uc2e4\ud589",id:"\ud504\ub85c\uc81d\ud2b8-\uc2e4\ud589",level:5},{value:"\ud504\ub85c\uc81d\ud2b8 \uad6c\uc870",id:"\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",level:5},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc-2",level:4},{value:"FW_TIMER",id:"fw_timer",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860-3",level:4},{value:"\uae30\ub2a5",id:"\uae30\ub2a5-2",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4-3",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-3",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-4",level:4},{value:"timer_group",id:"timer_group-1",level:5},{value:"FW_UART",id:"fw_uart",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860-4",level:4},{value:"\uae30\ub2a5",id:"\uae30\ub2a5-3",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4-4",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-4",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-5",level:4},{value:"uart_echo",id:"uart_echo",level:5},{value:"uart_async_rxtxtasks",id:"uart_async_rxtxtasks",level:5},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc-3",level:4},{value:"FW_WIFI",id:"fw_wifi",level:3},{value:"\uae30\ucd08\uc774\ub860",id:"\uae30\ucd08\uc774\ub860-5",level:4},{value:"WIFI\uad6c\uc131",id:"wifi\uad6c\uc131",level:5},{value:"\uc778\ud130\ud398\uc774\uc2a4",id:"\uc778\ud130\ud398\uc774\uc2a4-5",level:5},{value:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815",id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-5",level:5},{value:"\uc608\uc81c\ud655\uc778",id:"\uc608\uc81c\ud655\uc778-6",level:4},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc-4",level:4},{value:"wifi",id:"wifi",level:5},{value:"\uc544\ub450\uc774\ub178",id:"\uc544\ub450\uc774\ub178-1",level:5},{value:"RTOS_Sync",id:"rtos_sync",level:3},{value:"\uae30\ubcf8\uac1c\ub150",id:"\uae30\ubcf8\uac1c\ub150",level:4},{value:"\uc138\ub9c8\ud3ec\uc5b4/\ubba4\ud14d\uc2a4",id:"\uc138\ub9c8\ud3ec\uc5b4\ubba4\ud14d\uc2a4",level:5},{value:"\ud050",id:"\ud050",level:5},{value:"\ud0dc\uc2a4\ud06c \ub3d9\uae30\ud654",id:"\ud0dc\uc2a4\ud06c-\ub3d9\uae30\ud654",level:5},{value:"\ucc38\uace0\uc790\ub8cc",id:"\ucc38\uace0\uc790\ub8cc-5",level:4},{value:"RTOS_Task",id:"rtos_task",level:3},{value:"\ud0dc\uc2a4\ud06c \uc0dd\uc131",id:"\ud0dc\uc2a4\ud06c-\uc0dd\uc131",level:4},{value:"\uc6b0\uc120\uc21c\uc704 \uc124\uc815",id:"\uc6b0\uc120\uc21c\uc704-\uc124\uc815",level:4},{value:"FreeRTOS",id:"freertos",level:5},{value:"mbed",id:"mbed",level:5}],s={toc:m};function u(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"\uc0ac\uc591"},"\uc0ac\uc591"),(0,n.kt)("h3",{id:"mcu"},"MCU"),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(9005).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<Modules on ESP32-DevKitC v4>")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Internal Memory",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc678\ubd80\uba54\ubaa8\ub9ac \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \ub0b4\ubd80\uba54\ubaa8\ub9ac\ub294 \uc678\ubd80\uba54\ubaa8\ub9ac\uc5d0 \ub300\ud55c \ub3c5\ub9bd\ub41c \uce90\uc2dc\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},"External Memory  ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Supports up to 16 MB off-Chip SPI Flash"),(0,n.kt)("li",{parentName:"ul"},"Supports up to 8 MB off-Chip SPI SRAM"))),(0,n.kt)("li",{parentName:"ul"},"IO Usage",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"USB\ucee4\ub125\ud2b8 \uc591\ucabd \uadfc\ucc98\uc5d0 \uadf8\ub8f9\ud654 \ub41c D0, D1, D2, D3, CMD \ubc0f CLK\ub294 \ub0b4\ubd80\uc801\uc73c\ub85c ESP32\uc640 SPI\uba54\ubaa8\ub9ac(Flash/RAM) \uac04\uc758 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/11/esp32-gpio.html"},"ESP32 GPIO \ud3ec\ud2b8 \uc124\uba85"))),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(7033).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<PinMap of ESP32-DevKitC v4>")),"* \uba54\ubaa8\ub9ac\ub9f5",(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(1807).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<MemoroyMap in technical reference manual>")),(0,n.kt)("h3",{id:"mcu\ube44\uad50"},"MCU\ube44\uad50"),(0,n.kt)("p",null,"ESP32 vs NodeMCU"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"ESP-WROOM-32"),(0,n.kt)("th",{parentName:"tr",align:null},"NodeMCU"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"32bit Xtensa Dual-core"),(0,n.kt)("td",{parentName:"tr",align:null},"32bit Xtensa Single-core")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Bluetooth 4.2+wifi"),(0,n.kt)("td",{parentName:"tr",align:null},"No Bluetooth")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"EEPROM Flash"),(0,n.kt)("td",{parentName:"tr",align:null},"No Flash")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"160MHz"),(0,n.kt)("td",{parentName:"tr",align:null},"80MHz")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"CAN protocol"),(0,n.kt)("td",{parentName:"tr",align:null},"No CAN protoclo")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"34 GPIO pin"),(0,n.kt)("td",{parentName:"tr",align:null},"17 GPIO pin")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"12 bit ADC"),(0,n.kt)("td",{parentName:"tr",align:null},"10 bit ADC")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"built-in Hall sensor, temperature sensor"),(0,n.kt)("td",{parentName:"tr",align:null},"No built-in sensor")))),(0,n.kt)("p",null,"ESP32 vs ESP-32S"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"ESP32"),(0,n.kt)("th",{parentName:"tr",align:null},"ESP-32S"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ESP-WROOM-32"),(0,n.kt)("td",{parentName:"tr",align:null},"ESP-WROOM-32s")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"single-core"),(0,n.kt)("td",{parentName:"tr",align:null},"dual-core")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"wifi+ble"),(0,n.kt)("td",{parentName:"tr",align:null},"wifi+ble")))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://iotassistant.io/news/esp32-s2-vs-esp32/"},"ESP32-s2")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"IOT \ubc0f \uc2a4\ub9c8\ud2b8\ud3f0\uc744 \uc704\ud55c low power wifi \uc194\ub8e8\uc158(wifi only, no bluetooth support, esp32\ubcf4\ub2e4 50% \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc774 \ub192\uc74c)\uc5d0 \uc801\uc6a9\ud558\uae30 \uc704\ud574 \uc124\uacc4\ub418\uc5c8\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"ESP32(Xtensa 32bit LX6 dual core) -> ESP32(Xtensa 32bit LX7 single core)")),(0,n.kt)("h4",{id:"\ub370\uc774\ud130\uc2dc\ud2b8"},"\ub370\uc774\ud130\uc2dc\ud2b8"),(0,n.kt)("p",null,"ESP32-DevKitC v4\ub294 ESP32-WROOM-32D MCU Core\ub97c \uc0ac\uc6a9\ud558\ub294 wifi, Bluetooth \uc77c\uccb4\ud615 \uac1c\ubc1c\ubcf4\ub4dc \uc774\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html"},"ESP32-DevKitC V4 Getting Started \uac00\uc774\ub4dc"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ESP32-DevKitC V4 \uc8fc\uc694 \uad6c\uc131\uc694\uc18c"),(0,n.kt)("li",{parentName:"ul"},"\ud5e4\ub354 Pinmap \ubc0f \ub808\uc774\uc544\uc6c3"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/espressif/esp-idf"},"ESP-IDF Github \uc18c\uc2a4"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ESP-IDF\ub97c \uc124\uce58\ud558\uba74 ",(0,n.kt)("inlineCode",{parentName:"li"},"c:\\Users\\cdshim\\esp\\esp-idf\\")," \uacbd\ub85c\uc5d0 github\uc5d0 \uc788\ub294 \uc608\uc81c\ud504\ub85c\uadf8\ub7a8\uc774 \uc0dd\uc131\ub41c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sglee0223/esp32"},"esp32_devkit_v4 \uc608\uc81c\uc18c\uc2a4 github")))),(0,n.kt)("li",{parentName:"ul"},"ESP32-WROOM-32D",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32d_esp32-wroom-32u_datasheet_en.pdf"},"ESP32-DevKitC V4 mcu hw datasheet : ESP32\xadWROOM\xad32D_datasheet_en.pdf")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dl.espressif.com/dl/schematics/esp32_devkitc_v4-sch.pdf"},"ESP32-DevKitC V4 \ud68c\ub85c\ub3c4 : esp32_devkitc_v4-sch.pdf")))),(0,n.kt)("li",{parentName:"ul"},"\uae30\ud0c0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/index.html"},"ESP-IDF Programming Guide - API Reference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://coyoteugly.tistory.com/159?category=806422"},"ESP32-ADC"))))),(0,n.kt)("h4",{id:"\ud38c\uc6e8\uc5b4-\ucc38\uace0\uc790\ub8cc"},"\ud38c\uc6e8\uc5b4 \ucc38\uace0\uc790\ub8cc"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ESP32 peripheral",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/11/esp32-gpio.html"},"ESP32 peripheral \uc124\uba85")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://postpop.tistory.com/15"},"ESP32 peripheral \uc124\uba852")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/search?q=esp32"},"Deep Sleep & Wake-up"))))),(0,n.kt)("h2",{id:"\ud38c\uc6e8\uc5b4"},"\ud38c\uc6e8\uc5b4"),(0,n.kt)("h3",{id:"\ubd80\ud305\uacfc\uc815"},"\ubd80\ud305\uacfc\uc815"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ub9c1\ucee4\uc2a4\ud06c\ub9bd\ud2b8 \ud30c\uc77c(esp32_bootloader.ld)\uc5d0\uc11c Entry point\ub97c call_start_cpu0()\ub85c \uc815\uc758"),(0,n.kt)("li",{parentName:"ul"},"..esp\\esp-idf\\components\\esp_system\\port\\cpu_start.c -> call_start_cpu0() -> start_cpu0() -> start_cpu0_default() -> main_task() \uc0dd\uc131 \ud6c4 FreeRTOS vTaskStartScheduler()\ub97c \ud638\ucd9c\ud558\uc5ec \uc2a4\ucf00\uc974\ub9c1 \uc2dc\uc791 -> app_main() \ud638\ucd9c \ud6c4 main_task \uc790\uae30 \uc790\uc2e0 vTaskDelete() -> app_main() \uc2dc\uc791")),(0,n.kt)("h3",{id:"fw_ble"},"FW_BLE"),(0,n.kt)("admonition",{title:"GUI\ud658\uacbd \uad6c\ucd95",type:"note"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"\ube14\ub8e8\ud22c\uc2a4 \ud1b5\uc2e0\uc744 \uc704\ud55c \uc548\ub4dc\ub85c\uc774\ub4dc \ud504\ub85c\uadf8\ub798\ubc0d\uc740 \uc9c4\ud589\ud558\uc9c0 \uc54a\uace0, \uc571\uc2a4\ud1a0\uc5b4\ub97c \ud1b5\ud574 \ubb34\ub8cc\uc124\uce58\uac00 \uac00\ub2a5\ud55c BlueSPP \uc571(\uc6d0\ud558\ub294 \uae30\ub2a5\uc744 \ucda9\ubd84\ud788 \uad6c\ud604\ud560 \uc218 \uc788\uc74c)\uc744 \uc774\uc6a9\ud55c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"\ucd5c\uc885 GUI\ub294 \uc784\ubca0\ub514\ub4dc \uc6f9\uc11c\ubc84\ub97c \uad6c\ucd95\ud55c \ub2e4\uc74c wifi\ub97c \ud1b5\ud574 \uc6f9\ube0c\ub77c\uc6b0\uc800\ub85c \uc6f9\uc11c\ubc84\uc5d0 \uc811\uc18d\ud55c\ub2e4."))),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860"},"\uae30\ucd08\uc774\ub860"),(0,n.kt)("h5",{id:"ble"},"BLE"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Classic Bluetooth\ub294 \ud56d\uc0c1\uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \ubc18\uba74 BLE\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub300\uae30\ubaa8\ub4dc\uc5d0 \uc788\uc73c\uba70 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub9cc \uae68\uc5b4\ub098 \uc804\ub825\uc744 \uc801\uac8c \uc18c\ubaa8\ud55c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"BLE\ub294 2.4GHz ISM \uc8fc\ud30c\uc218 \ub300\uc5ed\uc5d0\uc11c\ub3c4 \uc791\ub3d9\ud558\ubbc0\ub85c Wi-fi\uc640 BLE\ub97c \ub2e8\uc77c \uc548\ud14c\ub098\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/chegewara/esp32-ble-wiki/issues/5"},"BLUETOOTH SPECIFICATION Version 5.0 - LIST OF ERROR CODES")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.naver.com/PostView.naver?blogId=cksung71&logNo=10183530219&categoryNo=15&parentCategoryNo=0&viewDate=&currentPage=2&postListTopCurrentPage=1&from=postView&userTopListOpen=true&userTopListCount=30&userTopListManageOpen=false&userTopListCurrentPage=2"},"\uc911\uc694 - Packet Format \ubc0f Advertising \ubc29\ubc95")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/stable/api-reference/bluetooth/index.html"},"EspressIF bluetooth API ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.naver.com/chodahi/221403306027"},"BLE\uc5d0\uc11c Pairing \uacfc Bonding")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.hardcopyworld.com/?p=1132"},"BLE(Bluetooth Low Energy) \uc774\ud574\ud558\uae30"))),(0,n.kt)("h5",{id:"\ube14\ub8e8\ud22c\uc2a4-\ud504\ub85c\ud30c\uc77c"},"\ube14\ub8e8\ud22c\uc2a4 \ud504\ub85c\ud30c\uc77c"),(0,n.kt)("p",null,"\ube14\ub8e8\ud22c\uc2a4 \ud504\ub85c\ud30c\uc77c\uc740 \ube14\ub8e8\ud22c\uc2a4 \uc11c\ube44\uc2a4\ub77c\uace0\ub3c4 \ud558\uba70 \ube14\ub8e8\ud22c\uc2a4 \ud1b5\uc2e0\uacc4\uce35 \ucd5c\uc0c1\ub2e8\uc5d0 \uc788\ub294 \uc77c\uc885\uc758 \ud504\ub85c\ud1a0\ucf5c\ub85c \ube14\ub8e8\ud22c\uc2a4\uc5d0\ub294 \uc218\uc2ed\uac1c\uc758 \ud504\ub85c\ud30c\uc77c \ud45c\uc900\uc774 \uc874\uc7ac\ud55c\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"SPP",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ube14\ub8e8\ud22c\uc2a4 \ud504\ub85c\ud30c\uc77c \uc911 SPP(Serial Port Profile)\uc740 \ube14\ub8e8\ud22c\uc2a4\ub97c \ud1b5\ud574 RS232\uc640 \uac19\uc740 \uae30\ub2a5\uc744 \ud558\ub294 \uc11c\ube44\uc2a4\ub2e4. SPP\ub97c \uc9c0\uc6d0\ud558\ub294 \ube14\ub8e8\ud22c\uc2a4 \uc7a5\uce58\ub97c PC\uc640 \uc5f0\uacb0\ud558\uba74 PC\uc5d0 \uac00\uc0c1 COM\ud3ec\ud2b8\uac00 \uc0dd\uc131\ub418\uace0, \ubb34\uc120\uc73c\ub85c RS232\ud1b5\uc2e0\uc744 \ud560 \uc218 \uc788\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"SPP\ub294 \ube14\ub8e8\ud22c\uc2a4 Classic\uc5d0\uc11c \uc815\uc758\ub418\uace0 \uc788\uace0, BLE(Bluetooth LE)\uc5d0\ub294 \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 BLE\ub97c \uc0ac\uc6a9\ud558\uba74 PC\uc5d0 \uac00\uc0c1 COM\ud3ec\ud2b8\uac00 \uc0dd\uc131\ub418\uc9c0 \uc54a\ub294\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},"SSP",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"SSP(Secure Simple Pairing)\ub294 bluetooth 2.1 Spec\uc5d0 \ub3c4\uc785\ub418\uc5c8\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"SSP\ub97c \uc0ac\uc6a9\ud558\uba74 Bluetooth \uc7a5\uce58\ub97c \ub354 \uac04\ub2e8\ud558\uac8c \ud398\uc5b4\ub9c1\ud560 \uc218 \uc788\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hubbleconstant.tistory.com/29"},"\ubcf4\uc548"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Security Management Protocol(SMP)\ub77c\uace0 \ud558\ub294 \ubcf4\uc548 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud55c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"\ube14\ub8e8\ud22c\uc2a4 v2.1 \uc774\uc804\uae4c\uc9c0\ub294 PIN\ucf54\ub4dc\ub97c \uc785\ub825\ud560 \uc778\ud130\ud398\uc774\uc2a4\uac00 \uc5c6\ub294 \uae30\uae30\uc5d0 \ud558\ub4dc\ucf54\ub529\ub41c PIN\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e8\uc21c \uba54\ucee4\ub2c8\uc998\uc774\uc5c8\ub294\ub370,"),(0,n.kt)("li",{parentName:"ul"},"\uc774\ud6c4 Diffie-Hellman \ud0a4\uad50\ud658\ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 SSP(Secure Simple Pairing)\ub77c\ub294 \uc778\uc99d \uba54\ucee4\ub2c8\uc998\uc744 \ub3c4\uc785\ud558\uc5ec PINCODE \uc785\ub825\uc5c6\uc774 Pairing\uc774 \uac00\ub2a5\ud558\uac8c \ub418\uc5c8\ub2e4. (SSP\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4c8\uacfc\ub294 PINCODE \uc785\ub825\uc774 \ud544\uc694\ud568)"),(0,n.kt)("li",{parentName:"ul"},"SSP\ub97c \ud1b5\ud574\uc11c\ub294 \ube14\ub8e8\ud22c\uc2a4 \uae30\uae30 \uc5f0\uacb0 \uc2dc \uc0c1\ub300\uae30\uae30\uc758 \ub3d9\uc758\ub97c \uad6c\ud55c\ub2e4\uc74c \uc218\ub77d\uc744 \ud1b5\ud574 \uc5f0\uacb0\uc774 \uc131\ub9bd\ub41c\ub2e4.")))),(0,n.kt)("h5",{id:"\ube44\ucf58"},"\ube44\ucf58"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\uc5b4\ub5a4 \uc2e0\ud638\ub97c \uc54c\ub9ac\uae30 \uc704\ud574 \uc8fc\uae30\uc801\uc73c\ub85c \uc2e0\ud638\ub97c \uc804\uc1a1\ud558\ub294 \uae30\uae30\ub97c \ub9d0\ud558\uba70, \uc560\ud50c\uc774 2013\ub144\uc5d0 BLE\uae30\ubc18\uc5d0 \ube44\ucf58\uac1c\ub150\uc744 \uc801\uc6a9\ud558\uc5ec ibeacon\uc744 \ubc1c\ud45c\ud55c \uc774\ud6c4 ibeacon\uc744 \ube44\ucf58\uc774\ub77c\uace0 \ubd80\ub978\ub2e4. "),(0,n.kt)("li",{parentName:"ul"},"\ube44\ucf58\uc740 \uc18c\ub7c9\uc758 \ud328\ud0b7 \uc804\uc1a1\uc73c\ub85c \ub3d9\uc791\uc774 \uac00\ub2a5\ud558\uace0, \uae30\uae30\ub97c \uc5f0\uacb0\ud558\uae30 \uc704\ud55c \ud398\uc774\ub9c1\uc774 \ubd88\ud544\uc694\ud558\uba70, \uc800\uc804\ub825\uc73c\ub85c \ud1b5\uc2e0\ud558\uae30 \ub54c\ubb38\uc5d0 \ub2e4\ub978 \ubb34\uc120 \ud1b5\uc2e0\uae30\ub8e8\uc5d0 \ube44\ud574 \uc800\ube44\uc6a9\uc73c\ub85c \uc704\uce58\ub97c \uc778\uc2dd\ud560 \uc218 \uc788\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"\ube44\ucf58\uc740 \uc7a5\uce58\uac00 \uc788\uac74 \uc5c6\uac74 \uc0c1\uad00\uc5c6\uc774 \ud2b9\uc815 \uc7a5\uce58\ub97c \uc9c0\uc815\ud558\uc9c0 \uc54a\uace0 \uc8fc\ubcc0\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0\uac8c \uc77c\ubc29\uc801\uc73c\ub85c \uc77c\uc815\uc8fc\uae30\uc758 \uc2e0\ud638\ub97c \ubcf4\ub0b4\uae30 \ub54c\ubb38\uc5d0 \ube44\ucf58\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \uc7a5\ube44 \uc811\ucd09\uc5c6\uc774 beacon\uc774 \uc124\uce58\ub41c \uacf3\uc744 \uc9c0\ub098\uac00\uae30\ub9cc \ud574\ub3c4 \ub370\uc774\ud130 \uc804\uc1a1\uc774 \uac00\ub2a5\ud558\ub2e4."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.naver.com/PostView.naver?blogId=cksung71&logNo=10183539970&categoryNo=15&parentCategoryNo=0&viewDate=&currentPage=2&postListTopCurrentPage=1&from=postView&userTopListOpen=true&userTopListCount=30&userTopListManageOpen=false&userTopListCurrentPage=2"},"iBeacon Advertising Packet  Data"))),(0,n.kt)("h5",{id:"ble\uad6c\uc131"},(0,n.kt)("a",{parentName:"h5",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/bluetooth/index.html"},"BLE\uad6c\uc131")),(0,n.kt)("h5",{id:"\uae30\ub2a5"},"\uae30\ub2a5"),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"BT \ud30c\ub77c\ubbf8\ud130 \ucd08\uae30\ud654 \ubc0f Enable"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'typedef struct {\n    /*\n     * Following parameters can be configured runtime, when call esp_bt_controller_init()\n     */\n    uint16_t controller_task_stack_size;    // Bluetooth controller task stack size\n    uint8_t controller_task_prio;           // Bluetooth controller task priority\n    uint8_t hci_uart_no;                    // If use UART1/2 as HCI IO interface, indicate UART number\n    uint32_t hci_uart_baudrate;             // If use UART1/2 as HCI IO interface, indicate UART baudrate\n    uint8_t scan_duplicate_mode;            // scan duplicate mode\n    uint8_t scan_duplicate_type;            // scan duplicate type\n    uint16_t normal_adv_size;               // Normal adv size for scan duplicate\n    uint16_t mesh_adv_size;                 // Mesh adv size for scan duplicate\n    uint16_t send_adv_reserved_size;        // Controller minimum memory value\n    uint32_t  controller_debug_flag;        // Controller debug log flag\n    uint8_t mode;                           // Controller mode: BR/EDR, BLE or Dual Mode\n    uint8_t ble_max_conn;                   // BLE maximum connection numbers\n    uint8_t bt_max_acl_conn;                // BR/EDR maximum ACL connection numbers\n    uint8_t bt_sco_datapath;                // SCO data path, i.e. HCI or PCM module\n    bool auto_latency;                      // BLE auto latency, used to enhance classic BT performance\n    bool bt_legacy_auth_vs_evt;             // BR/EDR Legacy auth complete event required to  protect from BIAS attack\n    /*\n     * Following parameters can not be configured runtime when call esp_bt_controller_init()\n     * It will be overwrite with a constant value which in menuconfig or from a macro.\n     * So, do not modify the value when esp_bt_controller_init()\n     */\n    uint8_t bt_max_sync_conn;               // BR/EDR maximum ACL connection numbers. Effective in menuconfig\n    uint8_t ble_sca;                        // BLE low power crystal accuracy index\n    uint8_t pcm_role;                       // PCM role (master & slave)*/\n    uint8_t pcm_polar;                      // PCM polar trig (falling clk edge & rising clk edge)\n    uint32_t magic;                         // Magic number\n} esp_bt_controller_config_t;\n\n#define BT_CONTROLLER_INIT_CONFIG_DEFAULT() {                              \\\n    .controller_task_stack_size = ESP_TASK_BT_CONTROLLER_STACK,            \\\n    .controller_task_prio = ESP_TASK_BT_CONTROLLER_PRIO,                   \\\n    .hci_uart_no = BT_HCI_UART_NO_DEFAULT,                                 \\\n    .hci_uart_baudrate = BT_HCI_UART_BAUDRATE_DEFAULT,                     \\\n    .scan_duplicate_mode = SCAN_DUPLICATE_MODE,                            \\\n    .scan_duplicate_type = SCAN_DUPLICATE_TYPE_VALUE,                      \\\n    .normal_adv_size = NORMAL_SCAN_DUPLICATE_CACHE_SIZE,                   \\\n    .mesh_adv_size = MESH_DUPLICATE_SCAN_CACHE_SIZE,                       \\\n    .send_adv_reserved_size = SCAN_SEND_ADV_RESERVED_SIZE,                 \\\n    .controller_debug_flag = CONTROLLER_ADV_LOST_DEBUG_BIT,                \\\n    .mode = BTDM_CONTROLLER_MODE_EFF,                                      \\\n    .ble_max_conn = CONFIG_BTDM_CTRL_BLE_MAX_CONN_EFF,                     \\\n    .bt_max_acl_conn = CONFIG_BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF,           \\\n    .bt_sco_datapath = CONFIG_BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF,          \\\n    .auto_latency = BTDM_CTRL_AUTO_LATENCY_EFF,                            \\\n    .bt_legacy_auth_vs_evt = BTDM_CTRL_LEGACY_AUTH_VENDOR_EVT_EFF,         \\\n    .bt_max_sync_conn = CONFIG_BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF,         \\\n    .ble_sca = CONFIG_BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF,             \\\n    .pcm_role = CONFIG_BTDM_CTRL_PCM_ROLE_EFF,                             \\\n    .pcm_polar = CONFIG_BTDM_CTRL_PCM_POLAR_EFF,                           \\\n    .magic = ESP_BT_CONTROLLER_CONFIG_MAGIC_VAL,                           \\\n};\n\nesp_bt_controller_config_t bt_cfg = BT_CONTROLLER_INIT_CONFIG_DEFAULT();\n\nif((ret = esp_bt_controller_init(&bt_cfg)) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s initialize controller failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n\nif((ret = esp_bt_controller_enable(ESP_BT_MODE_CLASSIC_BT)) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s enable controller failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"bluedroid \ucd08\uae30\ud654 \ubc0f Enable"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'if((ret = esp_bluedroid_init()) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s initialize bluedroid failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n\nif((ret = esp_bluedroid_enable()) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s enable bluedroid failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"BT \ubc0f SPP \ucf5c\ubc31\ud568\uc218 \ub4f1\ub85d"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"ESP_SPP_INIT_EVT -> ESP_SPP_START_EVT",(0,n.kt)("br",{parentName:"li"}),"\ucc98\uc74c bt_spp_acceptor \ud38c\uc6e8\uc5b4 \uc2e4\ud589 \uc2dc \ubc1c\uc0dd"),(0,n.kt)("li",{parentName:"ol"},"ESP_SPP_OPEN_EVT",(0,n.kt)("br",{parentName:"li"}),"\uc548\ub4dc\ub85c\uc774\ub4dc \uc571\uc5d0\uc11c ESP32 \ube14\ub8e8\ud22c\uc2a4 \uc5f0\uacb0 \uc2dc \ubc1c\uc0dd"),(0,n.kt)("li",{parentName:"ol"},"ESP_SPP_DATA_IND_EVT\n\uc548\ub3c4\ub974\uc624\ub4dc \uc571\uc5d0\uc11c \ud328\ud0b7 \uc804\uc1a1 \uc2dc \ubc1c\uc0dd")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'//========================\n// BT GAP callback events\n//------------------------\n// \ub2e4\uc74c \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uba74 esp_bt_gap_cb() \ucf5c\ubc31\ud568\uc218\uac00 \ud638\ucd9c\ub418\uc5b4 \ubc1c\uc0dd\ud55c \uc774\ubca4\ud2b8\ub97c \ucc98\ub9ac\ud55c\ub2e4.\ntypedef enum{\n    ESP_BT_GAP_DISC_RES_EVT = 0,              // Device discovery result event\n    ESP_BT_GAP_DISC_STATE_CHANGED_EVT,        // Discovery state changed event\n    ESP_BT_GAP_RMT_SRVCS_EVT,                 // Get remote services event\n    ESP_BT_GAP_RMT_SRVC_REC_EVT,              // Get remote service record event\n    ESP_BT_GAP_AUTH_CMPL_EVT,                 // Authentication complete event\n    ESP_BT_GAP_PIN_REQ_EVT,                   // Legacy Pairing Pin code request\n    ESP_BT_GAP_CFM_REQ_EVT,                   // Security Simple Pairing User Confirmation request.\n    ESP_BT_GAP_KEY_NOTIF_EVT,                 // Security Simple Pairing Passkey Notification\n    ESP_BT_GAP_KEY_REQ_EVT,                   // Security Simple Pairing Passkey request\n    ESP_BT_GAP_READ_RSSI_DELTA_EVT,           // Read rssi event\n    ESP_BT_GAP_CONFIG_EIR_DATA_EVT,           // Config EIR data event\n    ESP_BT_GAP_SET_AFH_CHANNELS_EVT,          // Set AFH channels event\n    ESP_BT_GAP_READ_REMOTE_NAME_EVT,          // Read Remote Name event\n    ESP_BT_GAP_MODE_CHG_EVT,\n    ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT,  // remove bond device complete event\n    ESP_BT_GAP_QOS_CMPL_EVT,                  // QOS complete event\n    ESP_BT_GAP_EVT_MAX,\n}esp_bt_gap_cb_event_t;\n\nif((ret = esp_bt_gap_register_callback(esp_bt_gap_cb)) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s gap register failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n\n//========================\n// BT GAP callback events\n//------------------------\n// \ub2e4\uc74c \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uba74 esp_spp_cb() \ucf5c\ubc31\ud568\uc218\uac00 \ud638\ucd9c\ub418\uc5b4 \ubc1c\uc0dd\ud55c \uc774\ubca4\ud2b8\ub97c \ucc98\ub9ac\ud55c\ub2e4.\ntypedef enum{\n    ESP_SPP_INIT_EVT            = 0,          // When SPP is inited, the event comes\n    ESP_SPP_UNINIT_EVT          = 1,          // When SPP is uninited, the event comes\n    ESP_SPP_DISCOVERY_COMP_EVT  = 8,          // When SDP discovery complete, the event comes\n    ESP_SPP_OPEN_EVT            = 26,         // When SPP Client connection open, the event comes\n    ESP_SPP_CLOSE_EVT           = 27,         // When SPP connection closed, the event comes\n    ESP_SPP_START_EVT           = 28,         // When SPP server started, the event comes\n    ESP_SPP_CL_INIT_EVT         = 29,         // When SPP client initiated a connection, the event comes\n    ESP_SPP_DATA_IND_EVT        = 30,         // When SPP connection received data, the event comes, only for ESP_SPP_MODE_CB\n    ESP_SPP_CONG_EVT            = 31,         // When SPP connection congestion status changed, the event comes, only for ESP_SPP_MODE_CB\n    ESP_SPP_WRITE_EVT           = 33,         // When SPP write operation completes, the event comes, only for ESP_SPP_MODE_CB\n    ESP_SPP_SRV_OPEN_EVT        = 34,         // When SPP Server connection open, the event comes\n    ESP_SPP_SRV_STOP_EVT        = 35,         // When SPP server stopped, the event comes\n}esp_spp_cb_event_t;\n\nif((ret = esp_spp_register_callback(esp_spp_cb)) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s spp register failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"SPP \ucd08\uae30\ud654"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'if((ret = esp_spp_init(esp_spp_mode)) != ESP_OK)\n{\n  ESP_LOGE(SPP_TAG, "%s spp init failed: %s\\n", __func__, esp_err_to_name(ret));\n  return;\n}\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"BT Security \uc124\uc815"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"#if(CONFIG_BT_SSP_ENABLED == true)\n  /* Set default parameters for Secure Simple Pairing\n  esp_bt_sp_param_t param_type = ESP_BT_SP_IOCAP_MODE;\n  esp_bt_io_cap_t iocap = ESP_BT_IO_CAP_IO;\n  esp_bt_gap_set_security_param(param_type, &iocap, sizeof(uint8_t));\n#endif\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Paring PinCode \uc124\uc815"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"/*\n * Set default parameters for Legacy Pairing\n * Use variable pin, input pin code when pairing\n\nesp_bt_pin_type_t pin_type = ESP_BT_PIN_TYPE_VARIABLE;\nesp_bt_pin_code_t pin_code;\nesp_bt_gap_set_pin(pin_type, 0, pin_code);\n"))),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"bt_spp_acceptor"},"bt_spp_acceptor"),(0,n.kt)("p",null,"example_spp_acceptor_demo.c -> \ub3d9\uc791\ud655\uc778\uc644\ub8cc"),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("h5",{id:"ble-\uac1c\ub150"},"BLE \uac1c\ub150"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/"},"BLE \uc815\ub9ac by \uc784\ubca0\ub514\ub4dc \uac1c\ubc1c\uc7a5\uc774"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/what-is-the-ble/"},"BLE (1) - \uc800\uc804\ub825 \ube14\ub8e8\ud22c\uc2a4 (BLE) \ub780?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-protocol-stack/"},"BLE (2) - BLE \ud504\ub85c\ud1a0\ucf5c \uc2a4\ud0dd")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-att-gatt/"},"BLE (3) - ATT/GATT \uc774\ud574\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-connection/"},"BLE (4) - BLE \ub514\ubc14\uc774\uc2a4\ub294 \uc5b4\ub5bb\uac8c \uc5f0\uacb0\ud560\uae4c?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-effective-throughput/"},"BLE (5) - BLE \ud1b5\uc2e0 \uc18d\ub3c4\ub294 \uc2e4\uc81c\ub85c 1 Mbps \uc77c\uae4c?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble5-intro/"},"BLE (6) - BLE 5.0 \uc8fc\uc694 \ud2b9\uc9d5")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-slave-latency/"},"BLE (7) - \uc5f0\uacb0 \ud30c\ub77c\ubbf8\ud130")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-development/"},"BLE (8) - Nordic BLE Chip \uac1c\ubc1c\ud658\uacbd \uad6c\ucd95\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-mesh/"},"BLE (9) - \ube14\ub8e8\ud22c\uc2a4 \uba54\uc2dc: Overview of Mesh stack")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-mesh-opeartion/"},"BLE (10) - \ube14\ub8e8\ud22c\uc2a4 \uba54\uc2dc: Overview of Mesh operation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-mesh-concepts/"},"BLE (11) - \ube14\ub8e8\ud22c\uc2a4 \uba54\uc2dc: Overview of Mesh concepts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-mesh-message/"},"BLE (12) - \ube14\ub8e8\ud22c\uc2a4 \uba54\uc2dc: Advertising Bearer \ud3ec\ub9f7")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-bluetooth-news-51/"},"BLE (13) - \ube14\ub8e8\ud22c\uc2a4 \uc18c\uc2dd: Bluetooth 5.1")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-bluetooth-52/"},"BLE (14) - \uc0c8\ub85c\uc6b4 \ubb34\uc120 \uc624\ub514\uc624 \uc2dc\uc7a5\uc758 \uc2dc\uc791: Bluetooth 5.2")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://enidanny.github.io/ble/ble-bluetooth53/"},"BLE (15) - Bluetooth 5.3 \uc5d0\uc11c \uac1c\uc120 \ubc0f \ucd94\uac00\ub41c BLE \uae30\ub2a5")))),(0,n.kt)("li",{parentName:"ul"},"\ube14\ub8e8\ud22c\uc2a4 \uc571",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://karrel.tistory.com/m/15"},"\ube14\ub8e8\ud22c\uc2a4 SPP\ub97c \uc704\ud55c \uc0d8\ud50c \uc571 \uac1c\ubc1c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://jinyongjeong.github.io/2018/09/27/bluetoothpairing/"},"\uc548\ub4dc\ub85c\uc774\ub4dc \uc5b4\ud50c\uc5d0\uc11c \uc9c1\uc811 \uc8fc\ubcc0\uae30\uae30\ub97c \uac80\uc0c9\ud558\uace0 pairing \ud558\ub294 \ubc29\ubc95")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.hardcopyworld.com/?p="},"\ud648 \uc624\ud1a0\uba54\uc774\uc158\uc744 \uc704\ud55c \ubaa8\ubc14\uc77c \uc571 \ub9cc\ub4e4\uae30"))))),(0,n.kt)("h5",{id:"\uc544\ub450\uc774\ub178"},"\uc544\ub450\uc774\ub178"),(0,n.kt)("p",null,"\uc544\ub450\uc774\ub178\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud558\uba74 \ube14\ub8e8\ud22c\uc2a4 \ud1b5\uc2e0\uc744 \ub9e4\uc6b0 \uac04\ub2e8\ud558\uac8c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2019/07/esp32-spp-profile.html"},"ESP32\uc5d0\uc11c \ube14\ub8e8\ud22c\uc2a4 \uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://velog.io/@embeddedjune/BLE-%EA%B0%9C%EB%B0%9C-%EA%B4%80%EB%A0%A8-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC"},"Arduino-ESP32-BLE \uac1c\ubc1c \uad00\ub828 \ub0b4\uc6a9 \uc815\ub9ac - \uc27d\uac8c \uc124\uba85, Good")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.bneware.com/blogPost/esp32_arduino_bluetooth"},"ESP32 \uc544\ub450\uc774\ub178 \ube14\ub8e8\ud22c\uc2a4 \ud14c\uc2a4\ud2b8 - \uc544\uc8fc \uc26c\uc6c0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/fbiego/ESP32_BLE_OTA_Arduino/blob/main/esp32_nim_ble_ota/esp32_nim_ble_ota.ino"},"ESP32_BLE_OTA_Arduino"))),(0,n.kt)("h5",{id:"esp-idf"},"ESP-IDF"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.espressif.com/sites/default/files/documentation/esp32_bluetooth_architecture_en.pdf"},"ESP32 Bluetooth Architecture")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://higaski.at/aoihashi-esp32-bluetooth-serial-module/"},"ESP32 bluetooth serial module")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/ota.html#secure-ota-updates-without-secure-boot"},"Over The Air Updates (OTA)"))),(0,n.kt)("h5",{id:"nordic-nrf51-dk"},"Nordic nRF51-DK"),(0,n.kt)("p",null,"ESP32\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\ub294 \ubc18\uba74 nRF \uc2dc\ub9ac\uc988\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \uc81c\uacf5\ud558\uace0, mbed\ub3c4 \uc9c0\uc6d0\ud568."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=LdY2m_bZTgE"},"nRF51 DK FOTA \ucee8\uc149 \ubc0f \uc608\uc81c \ud504\ub85c\uc81d\ud2b8 \uc2e4\ud589\ubc29\ubc95 from \uc720\ud22c\ube0c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://os.mbed.com/platforms/Nordic-nRF51-DK/#support-for-fota"},"support arm mbed and fota")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/viewer?url=http%3A%2F%2Finfocenter.nordicsemi.com%2Fpdf%2FnRF51_Dongle_UG_v1.0.pdf&embedded=true&chrome=false&dov=1"},"nRF51 Dongle SDK")," - \uac00\uaca9: ",(0,n.kt)("a",{parentName:"li",href:"https://www.eleparts.co.kr/goods/view?no=9378612"},"\uc5d8\ub808\ud30c\uce20 12\ub9cc\uc6d0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.google.com/viewer?url=https%3A%2F%2Finfocenter.nordicsemi.com%2Fpdf%2FnRF51_DK_UG_v1.1.pdf&embedded=true&chrome=false&dov=1"},"NRF51-DK SDK")," - \uac00\uaca9: ",(0,n.kt)("a",{parentName:"li",href:"https://eleparts.co.kr/EPXKTGB3"},"\uc5d8\ub808\ud30c\uce20 6\ub9cc\uc6d0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://m.blog.naver.com/PostView.naver?blogId=cksung71&logNo=221262064390&targetKeyword=&targetRecommendationCode=1"},"SEGGER Embedded Studio for nRF5")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://devzone.nordicsemi.com/nordic/short-range-guides/b/software-development-kit/posts/setting-up-device-firmware-updatedfu-on-the-nrf5-d"},"nRF5 DK\uc5d0\uc11c \uc7a5\uce58 \ud38c\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8(DFU) \uc124\uc815")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://m.blog.naver.com/PostView.naver?blogId=cksung71&logNo=221262064390&targetKeyword=&targetRecommendationCode=1"},"\uc644\uc804 \ubb34\ub8cc \uac1c\ubc1c \ud234 : SEGGER Embedded Studio")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=YZouRE_Ol8g&t=18s"},"SEGGER Embedded studio \u2013 Getting started from \uc720\ud22c\ube0c"))),(0,n.kt)("h3",{id:"fw_ble_uart"},"FW_BLE_UART"),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-1"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"\ud504\ub85c\uc81d\ud2b8-\uc774\ub984-\ubcc0\uacbd"},"\ud504\ub85c\uc81d\ud2b8 \uc774\ub984 \ubcc0\uacbd"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"ESP-IDF \ube14\ub8e8\ud22c\uc2a4 \uc608\uc81c \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131"),(0,n.kt)("li",{parentName:"ol"},"\uc774\ud074\ub9bd\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc774\ub984 \ubcc0\uacbd",(0,n.kt)("br",{parentName:"li"}),"bt_spp_acceptor -> bt_uart\ub85c \ubcc0\uacbd"),(0,n.kt)("li",{parentName:"ol"},"main()\ud568\uc218\uac00 \uc788\ub294 \ud30c\uc77c\uba85 \ubcc0\uacbd",(0,n.kt)("br",{parentName:"li"}),"example_spp_acceptor_demo.c -> bt_uart.c\ub85c \ubcc0\uacbd"),(0,n.kt)("li",{parentName:"ol"},"\ube4c\ub4dc \uc2dc \ucc38\uace0\ub418\ub294 \uc18c\uc2a4\ud30c\uc77c \uba85 \ubcc0\uacbd",(0,n.kt)("br",{parentName:"li"}),"CMakeLists.txt \ud30c\uc77c Open",(0,n.kt)("br",{parentName:"li"}),"SRCS\ub97c example_spp_acceptor_demo.c -> bt_uart.c\ub85c \ubcc0\uacbd")),(0,n.kt)("h5",{id:"menuconfig\uc5d0-uart\uc124\uc815-\ucd94\uac00"},"menuconfig\uc5d0 UART\uc124\uc815 \ucd94\uac00"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"ESP-IDF UART \uc608\uc81c\ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c Kconfig.projbuild \ubcf5\uc0ac\ud558\uc5ec"),(0,n.kt)("li",{parentName:"ol"},"bt_uart \ud504\ub85c\uc81d\ud2b8 main \ud3f4\ub354\uc5d0 \ubd99\uc5ec\ub123\uae30"),(0,n.kt)("li",{parentName:"ol"},"\uae30\uc874\uc5d0 \uc0dd\uc131\ud55c build \ud3f4\ub354 \uc0ad\uc81c \ud6c4 \ube4c\ub4dc \uc7ac\uc218\ud589"),(0,n.kt)("li",{parentName:"ol"},"\uc124\uc815\ud30c\uc77c \uc5f4\uae30",(0,n.kt)("br",{parentName:"li"}),"\ucf58\uc194(ESP-IDF 4.3 CMD)\uc5d0\uc11c idf.py menuconfig or \uc774\ud074\ub9bd\uc2a4\uc5d0\uc11c sdkconfig \ub354\ube14\ud074\ub9ad"),(0,n.kt)("li",{parentName:"ol"},"menuconfig\uc5d0\uc11c \ucd94\uac00\ub41c UART \ud655\uc778")),(0,n.kt)("h5",{id:"\ucf54\ub4dc\uad6c\ud604"},"\ucf54\ub4dc\uad6c\ud604"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gitlab.com/private210/ewserver/-/blob/main/function/bt_uart/main/bt_uart.c"},"gitlab login \ud6c4 \ub9c1\ud06c\ud655\uc778"))),(0,n.kt)("h3",{id:"fw_can"},"FW_CAN"),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860-1"},"\uae30\ucd08\uc774\ub860"),(0,n.kt)("h5",{id:"can\uad6c\uc131"},"CAN\uad6c\uc131"),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4-1"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-1"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-2"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"timer_group"},"timer_group"),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc-1"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2019/06/esp32-can-bus.html"},"ESP32\uc5d0\uc11c CAN bus \uc0ac\uc6a9\ud558\uae30"))),(0,n.kt)("h3",{id:"fw_gpio"},"FW_GPIO"),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860-2"},(0,n.kt)("a",{parentName:"h4",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/gpio.html"},"\uae30\ucd08\uc774\ub860")),(0,n.kt)("h5",{id:"\uae30\ub2a5-1"},"\uae30\ub2a5"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"34\uac1c\uc758 physical GPIO pad\ub97c \uac16\ub294\ub370 \uc774\uc911 \uba87\uba87\uc740 \uc0ac\uc6a9 \ubd88\uac00\ub2a5\ud568."),(0,n.kt)("li",{parentName:"ul"},"\uac01 \ud328\ub4dc\ub294 GPIO \ub610\ub294 internal peripherals signal\ub85c \uc5f0\uacb0\ud558\uc5ec \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4.")),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(9602).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<GPIO Alternative Configuration>")),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4-2"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ucd9c\ub825\uc124\uc815 : GPIO18, GPIO19 \ud3ec\ud2b8\ub85c 0/1 \uc2e0\ud638 \ucd9c\ub825"),(0,n.kt)("li",{parentName:"ul"},"\uc785\ub825\uc124\uc815 : GPIO4(both edge), GPIO5(rising edge) \ud3ec\ud2b8\ub85c \uc778\ud130\ub7fd\ud2b8(EXT_INT) \uc2e0\ud638 \uc785\ub825")),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(4044).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<\uc785/\ucd9c\ub825 \ud3ec\ud2b8 \uc815\uc758>")),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-2"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-3"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"generic_gpio"},"generic_gpio"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://gitlab.com/private210/ewserver/-/blob/main/peripherals/esp32/generic_gpio/main/gpio_example_main.c"},(0,n.kt)("inlineCode",{parentName:"a"},"gitlab \ub85c\uadf8\uc778 -> private repository -> generic_gpio.c"))),(0,n.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 console printf, gpio, ext_int, create_task, queue \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"1s \uac04\uaca9\uc73c\ub85c GPIO18, GPIO19 \ucd9c\ub825 Toggling"),(0,n.kt)("li",{parentName:"ol"},"GPIO4(both edge), GPIO5(rising edge) \ud3ec\ud2b8\ub97c \ud1b5\ud574 \uc778\ud130\ub7fd\ud2b8\uac00 \ubc1c\uc0dd\ud558\uba74 \ud3ec\ud2b8\ubc88\ud638\ub97c \uc778\uc790\ub85c \uac16\ub294 xQueueSendFromISR \ubc1c\uc0dd"),(0,n.kt)("li",{parentName:"ol"},"Task\uc5d0\uc11c Queue \uc218\uc2e0 \uc2dc \ud3ec\ud2b8\ubc88\ud638/\uc2e0\ud638\ub808\ubca8 printf")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'void isr_ext_int(void)\n{\n    // \uc778\ud130\ub7ec\ub7fd\ud2b8 \ubc1c\uc0dd \uc2dc Send_Queue\n}\n\nvoid gpio_task(void)\n{\n    for(;;)\n    {\n        if(xQueueReceive)\n            printf("port_number, port_level");\n    }\n}\n\nvoid app_main(void)\n{\n    // gpio \ucd9c\ub825 \uc124\uc815\n    // gpio \uc785\ub825 \uc124\uc815\n    // Queue \ubc0f \ud0dc\uc2a4\ud06c \uc0dd\uc131(\uc0dd\uc131\uc5d0 \uc131\uacf5\ud558\uba74 task\ub294 \ubc14\ub85c \uc2dc\uc791\ub428)\n    // ext_int isr \ub4f1\ub85d\n    \n    while(1)\n    {\n        // 1s delay\n        // cnt++ print\n        // port0 and port1 0/1 toggling\n    }\n}\n')),(0,n.kt)("h4",{id:"\ubd84\uc11d"},"\ubd84\uc11d"),(0,n.kt)("p",null,"\uae30\ubcf8\uc774\ub418\ub294 GPIO toggling \uc608\uc81c\ud504\ub85c\uadf8\ub7a8\uc744 \ud1b5\ud574 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\ub97c \ud30c\uc545\ud55c\ub2e4."),(0,n.kt)("h5",{id:"\ud504\ub85c\uc81d\ud2b8-\uc2e4\ud589"},"\ud504\ub85c\uc81d\ud2b8 \uc2e4\ud589"),(0,n.kt)("p",null,"\ub2e4\uc74c \uc808\ucc28\ub97c \ud1b5\ud574 ESP\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc608\uc81c\ud504\ub85c\uc81d\ud2b8\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"esp32-idf eclipse\uc5d0\uc11c File->New->Espressif IDF Project\ub97c \uc120\ud0dd\ud55c\ub2e4.\n\uc5ec\uae30\uc11c\ub294 peripherals->gpio->",(0,n.kt)("inlineCode",{parentName:"li"},"generic_gpio")," \ud504\ub85c\uc81d\ud2b8\ub97c \uc120\ud0dd\ud55c\ub2e4.")),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(3757).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<esp32-idf\uc5d0\uc800 \uc81c\uacf5\ub418\ub294 gpio \uc608\uc81c\ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131>")),"2. \ud0c0\uac9f\uc744 esp32\ub85c \uc120\ud0dd\ud55c \ub2e4\uc74c Build&Run\uc744 \ud1b5\ud574 ESP32\ubcf4\ub4dc\uc5d0 \uc2e4\ud589\ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ud55c\ub2e4.",(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(2441).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<\ud504\ub85c\uc81d\ud2b8 \ube4c\ub4dc \ubc0f \uc2e4\ud589>")),"3. esp32-idf eclipse\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ud130\ubbf8\ub110\uc744 \ud1b5\ud574 printf \ucd9c\ub825\uc744 \ubaa8\ub2c8\ud130\ub9c1 \ud55c\ub2e4.",(0,n.kt)("p",null,"Window \ud0ed -> Show view -> terminal"),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(4577).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<printf \ucf58\uc194 \ubaa8\ub2c8\ud130\ub9c1>")),(0,n.kt)("h5",{id:"\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870"},"\ud504\ub85c\uc81d\ud2b8 \uad6c\uc870"),(0,n.kt)("p",null,"Basic Firmware(led blinking)\uc5d0 \ub300\ud55c \ubd84\uc11d\uc744 \ud1b5\ud574 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\ub97c \ud30c\uc545\ud55c\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"esp32-idf\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uc608\uc81c \ud504\ub85c\uc81d\ud2b8\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc870\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \uc0dd\uc131\ud558\uba70,\nbuild \ud3f4\ub354 \ud558\uc704\uacbd\ub85c\uc5d0 esp-idf sdk directory \uad6c\uc870\uc640 \ub3d9\uc77c\ud558\uac8c \ud3f4\ub354\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"esp-idf sdk\uc5d0 \uc788\ub294 \uc18c\uc2a4\ub97c \ube4c\ub4dc\ud558\uc5ec library(",(0,n.kt)("em",{parentName:"li"},".a) \ud30c\uc77c\ub85c \ub9cc\ub4e4\uc5b4 build \ud3f4\ub354 \ud558\uc704 \uacbd\ub85c\uc5d0 library("),".a) \ud30c\uc77c\uc744 \uc0dd\uc131/\ub9c1\ud0b9\ud55c\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"\ub530\ub77c\uc11c \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 main.c\ud30c\uc77c\ub9cc \uc0dd\uc131\ub418\uba70, \uc774\uc678\uc758 \ud30c\uc77c\uc740 library(*.a) \ud30c\uc77c\ub85c \uc874\uc7ac\ud558\uba70, \uc6d0\ubcf8\uc18c\uc2a4\ub97c \ud655\uc778\ud558\ub824\uba74 esp-idf sdk \uc124\uce58\uacbd\ub85c(C:\\Users\\cdshim\\esp\\esp-idf)\uc5d0 \uc788\ub294 \uc18c\uc2a4\ud30c\uc77c\uc744 \ud655\uc778\ud574\uc57c \ud55c\ub2e4.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"generic_gpio\n \u2523\u2501 Binaries\n \u2503   \u2523\u2501 bootloader.elf\n \u2503   \u2517\u2501 generic-gpio.elf\n \u2523\u2501 build\n \u2503   \u2523\u2501 bootloader\n \u2503   \u2517\u2501 esp-idf             // esp-idf sdk\uc758\n \u2503       \u2523\u2501 bootloader\n \u2503       \u2517\u2501 driver          // driver \ud3f4\ub354\uc5d0 \uc704\uce58\ud55c \uc18c\uc2a4\ub97c \ube4c\ub4dc\ud558\uc5ec\n \u2503          \u2517\u2501 libdriver.a  // library\ub85c \ub9cc\ub4e4\uc5b4 \uc774\uacf3\uc5d0 \uc800\uc7a5\n \u2503             :\n \u2523\u2501 main\n \u2503   \u2523\u2501 generic-gpio_main.c // main \uc18c\uc2a4\ud30c\uc77c\n \u2503   \u2523\u2501 CMakeLists.txt\n \u2503   \u2517\u2501 component.mk\n \u2523\u2501 CMakeList.txt\n \u2523\u2501 example_test.py\n \u2523\u2501 Makefile\n \u2523\u2501 README.md               // \ud504\ub85c\uc81d\ud2b8 \uc124\uba85(eclipse\uc5d0\uc11c markdown \ud3ec\uba67\uc73c\ub85c \ud655\uc778\uac00\ub2a5)\n \u2523\u2501 sdkconfig               // \ub354\ube14\ud074\ub9ad -> \ud504\ub85c\uc81d\ud2b8 \uad00\ub828 \uc124\uc815(= menuconfig)\n \u2517\u2501 sdkconfig_old           // \uc6d0\ubcf8 \uc124\uc815\ud30c\uc77c\n")),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc-2"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/esp-idf-en-v4.4-dev-3235-g3e370c4-esp32.pdf"},"ESP32 ESP-IDF Programming Guide(2312p).pdf"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"705p, ",(0,n.kt)("inlineCode",{parentName:"li"},"2.3.4 GPIO & RTC GPIO")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.espressif.com/sites/default/files/documentation/esp32_technical_reference_manual_en.pdf#iomuxgpio"},"esp32_technical_reference_manual_en(720p).pdf"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"45p, ",(0,n.kt)("inlineCode",{parentName:"li"},"4 IO_MUX and GPIO Matrix (GPIO, IO_MUX)"))))),(0,n.kt)("h3",{id:"fw_timer"},"FW_TIMER"),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860-3"},(0,n.kt)("a",{parentName:"h4",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/timer.html"},"\uae30\ucd08\uc774\ub860")),(0,n.kt)("h5",{id:"\uae30\ub2a5-2"},"\uae30\ub2a5"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"2\uac1c\uc758 \ud558\ub4dc\uc6e8\uc5b4 \ud0c0\uc774\uba38 \uadf8\ub8f9\uc744 \uac16\uace0 \uc788\uc73c\uba70, \uac01 \uadf8\ub8f9\uc740 2\uac1c\uc758 general-purpose hardware timer\ub97c \uac16\uace0 \uc788\ub2e4."),(0,n.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 \ud0c0\uc774\uba38\ub294 16bit prescaler\ub97c \uac16\ub294 64bit timer\ub85c,"),(0,n.kt)("li",{parentName:"ul"},"auto-reload\ub97c \ud1b5\ud574 up/down \uce74\uc6b4\ud130\ub85c \ub3d9\uc791\ud55c\ub2e4.")),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4-3"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("p",null,"\ud0c0\uc774\uba38\uc778\ud130\ub7fd\ud2b8 \ubc1c\uc0dd \uc2dc \ub4f1\ub85d\ud574 \ub193\uc740 \ucf5c\ubc31\ud568\uc218\uac00 \ud638\ucd9c\ub418\uc5b4 \uba54\uc2dc\uc9c0\ub97c \ud050\ubc84\ud37c\uc5d0 \uc800\uc7a5\ud558\uace0, main\uc5d0\uc11c \uba54\uc2dc\uc9c0 \uc218\uc2e0 \uc2dc printf\ub97c \ud1b5\ud574 \ucf5c\ubc31\ud568\uc218 \ud638\ucd9c\uc5ec\ubd80\ub97c \ud655\uc778\ud55c\ub2e4.",(0,n.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c printf \ub9cc\uc73c\ub85c \ub3d9\uc791\uc744 \ud655\uc778\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub3c4\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub294 \ud544\uc694\uc5c6\ub2e4."),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-3"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ud30c\ub77c\ubbf8\ud130 \uc124\uc815"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\uad6c\uc870\uccb4\uc5d0 \uac12\uc744 \uc124\uc815\ud558\uc5ec esp32_api timer_init() \ud568\uc218\uc5d0 \uc778\uc790\ub85c \uc124\uc815\uac12\uc744 \uac74\ub124 \ud0c0\uc774\uba38 \ucd08\uae30\ud654\ub97c \uc218\ud589\ud55c\ub2e4.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"typedef struct {\n    timer_alarm_t alarm_en;         /*!< Timer alarm enable */\n    timer_start_t counter_en;       /*!< Counter enable */\n    timer_intr_mode_t intr_type;    /*!< Interrupt mode */\n    timer_count_dir_t counter_dir;  /*!< Counter direction  */\n    timer_autoreload_t auto_reload; /*!< Timer auto-reload */\n    uint32_t divider;               /*!< Counter clock divider. The divider's range is from from 2 to 65536. */\n    #if SOC_TIMER_GROUP_SUPPORT_XTAL\n        timer_src_clk_t clk_src;    /*!< Use XTAL as source clock. */\n    #endif\n} timer_config_t;\n\ntimer_config_t config = { \n    .divider = TIMER_DIVIDER, \n    .counter_dir = TIMER_COUNT_UP, \n    .counter_en = TIMER_PAUSE,\n    .alarm_en = TIMER_ALARM_EN, \n    .auto_reload = auto_reload, };  // default clock source is APB\ntimer_init(group, timer, &config);\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Counter Value \uc124\uc815"),(0,n.kt)("p",null,"\ucd08\uae30\ud654 \ud6c4 \ub2e4\uc74c\uacfc \uac19\uc774 \ud0c0\uc544\uba38\uce74\uc6b4\ud2b8 \uc2dc\uc791\uac12\uc744 \uc124\uc815\ud558\uba70, auto_reload\uac12\uc774 \uc124\uc815\ub418\uc5b4 \uc788\uc73c\uba74 overflow \ubc1c\uc0dd \ud6c4 auto_reload\ub85c \uac12\uc560 \uc7ac\uc124\uc815\ub418\uace0, \uadf8\ub807\uce58 \uc54a\uc744 \uacbd\uc6b0 \ucd5c\ucd08 \ud0c0\uc774\uba38\uce74\uc6b4\ud2b8 \uc2dc\uc791\uac12\uc73c\ub85c \ub2e4\uc2dc \uce74\uc6b4\ud2b8\ub97c \uc2dc\uc791\ud55c\ub2e4."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"timer_set_counter_value(group, timer, 0);\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"timer alarm \uc124\uc815 \ubc0f timer enable"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"timer_set_alarm_value(group, timer, timer_interval_sec * TIMER_SCALE);\ntimer_enable_intr(group, timer);\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ucf5c\ubc31\ud568\uc218 \ub4f1\ub85d \ud6c4 \ud0c0\uc774\uba38 \uc2dc\uc791"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"example_timer_info_t *timer_info = calloc(1, sizeof(example_timer_info_t));\ntimer_info->timer_group = group;\ntimer_info->timer_idx = timer;\ntimer_info->auto_reload = auto_reload;\ntimer_info->alarm_interval = timer_interval_sec;\ntimer_isr_callback_add(group, timer, timer_group_isr_callback, timer_info, 0);\n\ntimer_start(group, timer);\n"))),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-4"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"timer_group-1"},"timer_group"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"\ud0c0\uc774\uba38 \uc124\uc815 \ubc0f \ucf5c\ubc31\ud568\uc218\ub97c \ub4f1\ub85d\ud558\uc5ec \ud0c0\uc774\uba38\ub97c \uc2dc\uc791"),(0,n.kt)("li",{parentName:"ol"},"\ud0c0\uc774\uba38\uc778\ud130\ub7fd\ud2b8\uc5d0 \uc758\ud574 \ucf5c\ubc31\ud568\uc218\uac00 \ud638\ucd9c\ub418\uba74 \ud050\ubc84\ud37c\uc5d0 \uba54\uc2dc\uc9c0 \uc804\uc1a1"),(0,n.kt)("li",{parentName:"ol"},"main\uc758 while()\ubb38\uc5d0\uc11c \uba54\uc2dc\uc9c0 \uc218\uc2e0\uc744 \ub300\uae30\ud558\uace0 \uc788\ub2e4\uac00 \uba54\uc2dc\uc9c0\ub97c \uc218\uc2e0\ud558\uba74 \ud0c0\uc774\uba38\uce74\uc6b4\ud2b8 \uac12, \uc778\ud130\ub7fd\ud2b8\uac00 \ubc1c\uc0dd\ub41c \ud0c0\uc774\uba38 \uadf8\ub8f9, \ud0c0\uc774\uba38 \uc815\ubcf4 printf")),(0,n.kt)("h3",{id:"fw_uart"},"FW_UART"),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860-4"},(0,n.kt)("a",{parentName:"h4",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/uart.html"},"\uae30\ucd08\uc774\ub860")),(0,n.kt)("h5",{id:"\uae30\ub2a5-3"},"\uae30\ub2a5"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ESP32\ub294 3\uac1c(UART0, UART1, UART2)\uc758 UART Controller\ub97c \uac00\uc9c0\uace0 \uc788\uace0,"),(0,n.kt)("li",{parentName:"ul"},"\uc774\uc911 UART0\uc740 \ubaa8\ub2c8\ud130\ub9c1\uc6a9\uc73c\ub85c, UART2\ub294 \ud0c0\uac9f MCU\uc640\uc758 \ub370\uc774\ud130 \uc1a1/\uc218\uc2e0\uc744 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4.")),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4-4"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.devicemart.co.kr/goods/view?no=1324910"},(0,n.kt)("inlineCode",{parentName:"a"},"CP2102 USB to TTL \ucee8\ubc84\ud130"),"(\ub514\ubc14\uc774\uc2a4\ub9c8\ud2b8, 2750\uc6d0 \ud310\ub9e4)"),"\ub97c \ud1b5\ud574 \ud0c0\uac9f MCU\uc640 \ud1b5\uc2e0\uc744 \uc218\ud589\ud55c\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"UART0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"RX0(GPIO3), TX0(GPIO1)"),(0,n.kt)("li",{parentName:"ul"},"Onboard \ub418\uc5b4\uc788\ub294 usb to uart chip(CP2102N)\uc5d0 \uc5f0\uacb0\ub418\uc5b4 usb\ub97c \ud1b5\ud574 \uac00\uc0c1 \uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub85c \uc0ac\uc6a9\ub418\uba70, \uc8fc\ub85c \ucf58\uc194 \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},"UART2",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"RX2(GPIO5), TX2(GPIO4)"),(0,n.kt)("li",{parentName:"ul"},"\uc81c\uc5b4\uae30\uc640 \uc5f0\uacb0\ub418\uc5b4 \ube14\ub8e8\ud22c\uc2a4\ub97c \ud1b5\ud574 \uc218\uc2e0\ud55c \uc815\ubcf4\ub97c \uc81c\uc5b4\uae30\ub85c \uc804\ub2ec\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4."))),(0,n.kt)("li",{parentName:"ul"},"USB to UART \ucee8\ubc84\ud130",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.waveshare.com/wiki/FT232_USB_UART_Board_(mini)"},"FT232 USB UART Board (mini)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.eleparts.co.kr/goods/view?no=2305017"},"\uc5d8\ub808\ud30c\uce20 6600\uc6d0 \ud310\ub9e4")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.waveshare.com/wiki/File:FT232-Driver.7z"},"\ub4dc\ub77c\uc774\ubc84 \ub2e4\uc6b4\ub85c\ub4dc")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.waveshare.com/w/upload/f/f4/FT232-USB-UART-Board-Schematic.pdf"},"Board Schematic")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.waveshare.com/w/upload/b/b5/FT232R.pdf"},"FT232RL CPU Datasheet")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("del",{parentName:"li"},"CP2102 USB to TTL Uart Serial Converter"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.devicemart.co.kr/goods/view?no=1324910"},(0,n.kt)("del",{parentName:"a"},"\ub514\ubc14\uc774\uc2a4\ub9c8\ud2b8, 2750\uc6d0 \ud310\ub9e4"))))),(0,n.kt)("li",{parentName:"ul"},"21.10.03 \uc7a5\uce58\uc778\uc2dd \ubb38\uc81c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CP2102 USB to TTL Uart Serial Converter"),"\ub294 \uc0ac\uc6a9 \uc548\ud568 (\uc0ac\uc6a9\ud558\uae30\uc5d0\ub294 \uc774\uac8c \ub354 \ud3b8\ud568)"),(0,n.kt)("li",{parentName:"ul"},"\uae30\uc874\uc5d0 \uc0ac\uc6a9\ud588\ub358 ",(0,n.kt)("inlineCode",{parentName:"li"},"FT232 USB UART Board (mini)")," \uc0ac\uc6a9\ud568")))))),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:a(7155).Z,width:"450",alt:"Example banner"}),(0,n.kt)("br",null),(0,n.kt)("em",null,"<\uc785/\ucd9c\ub825 \ud3ec\ud2b8 \uc815\uc758>")),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-4"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ud30c\ub77c\ubbf8\ud130 \uc124\uc815"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"uart_param_config() \ud568\uc218\ub97c 1\ubc88 \ud638\ucd9c\ud558\uc5ec \ud55c\ubc88\uc5d0 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uacfc,"),(0,n.kt)("li",{parentName:"ul"},"uart_set_baudrate(), uart_set_word_length(), uart_set_parity() \ub4f1\uacfc \uac19\uc774 \uac01 \ub2e8\uacc4\ub97c \uac01\uac01\uc758 \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc5ec \uac01\uac01 \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc774 \uc788\uc73c\uba70,"),(0,n.kt)("li",{parentName:"ul"},"\uc5ec\uae30\uc11c\ub294 config() \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \ud55c\ubc88\uc5d0 UART \ud30c\ub77c\ubbf8\ud130\ub97c \uc124\uc815\ud55c\ub2e4.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"const uart_port_t uart_num = UART_NUM_2;\n\nuart_config_t uart_config = {\n  .baud_rate = 115200,\n  .data_bits = UART_DATA_8_BITS,\n  .parity = UART_PARITY_DISABLE,\n  .stop_bits = UART_STOP_BITS_1,\n  .flow_ctrl = UART_HW_FLOWCTRL_CTS_RTS,\n  .rx_flow_ctrl_thresh = 122,\n};\n\nESP_ERROR_CHECK(uart_param_config(  // \uc124\uc815\ud568\uc218\n                  uart_num,         // UART 0/1/2 \uc911 \ud558\ub098\n                  &uart_config));   // \uc124\uc815 \ud30c\ub77c\ubbf8\ud130\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"UART pin \uc124\uc815"),(0,n.kt)("p",null,"uart_set_pin() \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \ucd9c\ub825\ud540\uc744 \uc124\uc815\ud55c\ub2e4."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"ESP_ERROR_CHECK(uart_set_pin(\n                  UART_NUM_2,       // UART2\n                  4,                // TX2 : GPIO4\n                  5,                // RX2 : GPIO5\n                  18,               // RTS: GPIO18\n                  19));             // CTS: GPIO19\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ub4dc\ub77c\uc774\ubc84 \uc124\uc815"),(0,n.kt)("p",null,"Rx/Tx ring buffer size, event queue handle\uc744 \uc124\uc815\ud55c\ub2e4."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"// Setup UART buffered IO with event queue\nconst int uart_buffer_size = (1024 * 2);\nQueueHandle_t uart_queue;\n\n// Install UART driver using an event queue here\nESP_ERROR_CHECK(uart_driver_install(\n                  UART_NUM_2, uart_buffer_size, \\\n                  uart_buffer_size, \n                  10, \n                  &uart_queue, \n                  0));\n"))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ub370\uc774\ud130 \uc1a1\uc2e0"),(0,n.kt)("p",null,"\uc2dc\ub9ac\uc5bc \ud1b5\uc2e0\uc740 \uac01 UART controller\uc758 Finite State Machine(FSM)\uc5d0 \uc758\ud574 \uc81c\uc5b4\ub41c\ub2e4."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"uart_write_bytes()")," \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec Tx FIFO \ubc84\ud37c\uc5d0 \ub370\uc774\ud130 write"),(0,n.kt)("li",{parentName:"ul"},"Tx FIFO buffer\uc5d0 free space\uac00 \uc788\uc73c\uba74 ISR\uc774 background\uc5d0\uc11c \ub370\uc774\ud130\ub97c Tx ring buffer\uc5d0\uc11c Tx FIFO\ub85c \uc804\uc1a1\ud55c\ub2e4.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'// Write data to UART.\nchar* test_str = "This is a test string.\\n";\nuart_write_bytes(uart_num, (const char*)test_str, strlen(test_str));\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"\ub370\uc774\ud130 \uc218\uc2e0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"UART \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uba74 Rx FIFO buffer\uc5d0 \uc800\uc7a5"),(0,n.kt)("li",{parentName:"ul"},"uart_get_buffered_data_len() \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec Rx FIFO\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub294 byte \uc218 \ud655\uc778"),(0,n.kt)("li",{parentName:"ul"},"uart_read_bytes() \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \uc218\uc2e0 \ub370\uc774\ud130 \uc77d\uae30")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"// Read data from UART.\nconst uart_port_t uart_num = UART_NUM_2;\nuint8_t data[128];\nint length = 0;\nESP_ERROR_CHECK(uart_get_buffered_data_len(uart_num, (size_t*)&length));\nlength = uart_read_bytes(uart_num, data, length, 100);\n"))),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-5"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h5",{id:"uart_echo"},"uart_echo"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://gitlab.com/private210/ewserver/-/blob/main/peripherals/esp32/uart_echo/main/uart_echo_example_main.c"},(0,n.kt)("inlineCode",{parentName:"a"},"gitlab \ub85c\uadf8\uc778 -> private repository -> uart_echo_example_main.c"))),(0,n.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 console printf \ubc0f loopback(GPIO4_Tx2, GPIO5_Rx2) \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Task \uc0dd\uc131/\uc2dc\uc791 \uc804 console printf"),(0,n.kt)("li",{parentName:"ol"},"loopback task \uc0dd\uc131"),(0,n.kt)("li",{parentName:"ol"},"\uc77c\uc815\uc2dc\uac04\ub3d9\uc548 \ud328\ud0b7 \uc218\uc2e0 \ub300\uae30"),(0,n.kt)("li",{parentName:"ol"},"\uc218\uc2e0\ub41c \ud328\ud0b7 \uc1a1\uc2e0")),(0,n.kt)("h5",{id:"uart_async_rxtxtasks"},"uart_async_rxtxtasks"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://gitlab.com/private210/ewserver/-/blob/main/peripherals/esp32/uart_async_rxtxtasks/main/uart_async_rxtxtasks_main.c"},(0,n.kt)("inlineCode",{parentName:"a"},"gitlab \ub85c\uadf8\uc778 -> private repository -> uart_async_rxtxtasks_main.c"))),(0,n.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 console printf, GPIO4_Tx2, GPIO5_Rx2 \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Task \uc0dd\uc131/\uc2dc\uc791 \uc804 console printf"),(0,n.kt)("li",{parentName:"ol"},"rx_task, tx_task \uc0dd\uc131"),(0,n.kt)("li",{parentName:"ol"},'tx_task\uc5d0\uc11c \uc8fc\uae30\uc801\uc73c\ub85c "Hello world\\n" \uba54\uc2dc\uc9c0 GPIO4_Tx2'),(0,n.kt)("li",{parentName:"ol"},"rx_task\uc5d0\uc11c bytes \uc218\uc2e0 \uc2dc log \ucd9c\ub825")),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc-3"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ESP32 ESP-IDF Programming Guide(2312p).pdf -> 900p, 2.3.21 Universal Asynchronous Receiver/Transmitter (UART)")),(0,n.kt)("h3",{id:"fw_wifi"},"FW_WIFI"),(0,n.kt)("h4",{id:"\uae30\ucd08\uc774\ub860-5"},"\uae30\ucd08\uc774\ub860"),(0,n.kt)("h5",{id:"wifi\uad6c\uc131"},"WIFI\uad6c\uc131"),(0,n.kt)("p",null,"Bluetooth\uc640\ub294 \ub2e4\ub974\uac8c Wifi\ub97c \ud1b5\ud574 \uc784\ubca0\ub514\ub4dc \uc6f9\uc11c\ubc84\ub97c \uad6c\ucd95\ud558\uba74 \uc6f9\ube0c\ub77c\uc6b0\uc800\ub9cc \uc788\uc73c\uba74 ESP32\uc5d0 \uc811\uc18d\ud558\ub294 Client\uc5d0\uc11c \ube14\ub8e8\ud22c\uc2a4 \uc571\uacfc \uac19\uc740 \ubcc4\ub3c4 \ud504\ub85c\uadf8\ub7a8 \uc5c6\uc774 GUI\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4."),(0,n.kt)("h5",{id:"\uc778\ud130\ud398\uc774\uc2a4-5"},"\uc778\ud130\ud398\uc774\uc2a4"),(0,n.kt)("h5",{id:"\ub808\uc9c0\uc2a4\ud130\uc124\uc815-5"},"\ub808\uc9c0\uc2a4\ud130\uc124\uc815"),(0,n.kt)("h4",{id:"\uc608\uc81c\ud655\uc778-6"},"\uc608\uc81c\ud655\uc778"),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc-4"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("h5",{id:"wifi"},"wifi"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/stable/api-guides/wifi.html"},"wifi programming")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://coyoteugly.tistory.com/148"},"ESP32 blufi(Bluetooth\ub85c ip/pw\ub4f1 \uc5f0\uacb0\uc124\uc815\ud558\uc5ec \uc5f0\uacb0\ub418\uba74 wifi\ub85c \ud1b5\uc2e0)"))),(0,n.kt)("h5",{id:"\uc544\ub450\uc774\ub178-1"},"\uc544\ub450\uc774\ub178"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/07/esp32-websocket-server-on-esp32.html"},"\uc544\ub450\uc774\ub178 \ubc0f \ud30c\uc774\uc36c\uc744 \uc774\uc6a9\ud558\uc5ec ESP32\uc5d0\uc11c \uc6f9\uc18c\ucf13 \uc11c\ubc84 \uc2e4\ud589")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/07/esp32-json.html"},"ESP32\uc5d0\uc11c JSON \ud30c\uc2f1(for \uc2e4\uc2dc\uac04 \uc6f9\ud398\uc774\uc9c0 \uc5c5\ub370\uc774\ud2b8)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/11/esp32-static-ip-using-static-ip-address.html"},"ESP32\uc5d0 static IP \uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.electronicshub.org/esp32-servo-control/"},"ESP32\u2019s Web page accessed using Chrome browser - \ub05d\ubd80\ubd84"))),(0,n.kt)("h3",{id:"rtos_sync"},"RTOS_Sync"),(0,n.kt)("h4",{id:"\uae30\ubcf8\uac1c\ub150"},"\uae30\ubcf8\uac1c\ub150"),(0,n.kt)("h5",{id:"\uc138\ub9c8\ud3ec\uc5b4\ubba4\ud14d\uc2a4"},"\uc138\ub9c8\ud3ec\uc5b4/\ubba4\ud14d\uc2a4"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2018/07/esp32-freertos-message-queue.html"},"FreeRTOS Message Queue \uc0ac\uc6a9"))),(0,n.kt)("h5",{id:"\ud050"},"\ud050"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"boolean \ud06c\uae30\ub97c \uac16\ub294 \ub370\uc774\ud130\ub97c 10\uac1c\uae4c\uc9c0 \uc800\uc7a5\ud560 \uc218 \uc788\ub294 \ud050\ub97c \uc0dd\uc131\ud558\uace0, "),(0,n.kt)("li",{parentName:"ol"},"\uc778\ud130\ub7fd\ud2b8 \uc218\uc2e0 \uc989\uc2dc \ud050\uc5d0 \ub370\uc774\ud130\ub97c \uacc4\uc18d \ubc00\uc5b4 \ub123\uace0,"),(0,n.kt)("li",{parentName:"ol"},"main\uc5d0\uc11c \ud050 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uc5ec \uc0ac\uc6a9\ud55c\ub2e4.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'static bool toggleLED = false;\nstatic xQueueHandle gpio_evt_queue = NULL;\nuint8_t trigger;    // \ud050\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ubcc0\uc218\n\nvoid uart_isr(void)\n{\n  if(\ud328\ud0b7\uc218\uc2e0)\n  {\n    toggleLED = !toggleLED;\n    xQueueSend(gpio_evt_queue, &toggleLED, NULL);\n  }\n}\n\nvoid main(void)\n{\n    gpio_evt_queue = xQueueCreate(\n            10,               // \uc544\uc774\ud15c \ucd5c\ub300 \uac1c\uc218\n            sizeof(bool));    // \uac01 \uc544\uc774\ud15c\uc758 \ud06c\uae30\n  \n  while(1)\n  {\n        if(xQueueReceive(gpio_evt_queue, &trigger, portMAX_DELAY))\n        {\n            gpio_set_level(GPIO_OUTPUT_IO_0, trigger);\n            printf("# [gpio_task] gpio out: %d\\n", trigger);\n        }\n  }\n}\n')),(0,n.kt)("h5",{id:"\ud0dc\uc2a4\ud06c-\ub3d9\uae30\ud654"},"\ud0dc\uc2a4\ud06c \ub3d9\uae30\ud654"),(0,n.kt)("h4",{id:"\ucc38\uace0\uc790\ub8cc-5"},"\ucc38\uace0\uc790\ub8cc"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/ko_kr/freertos/latest/userguide/freertos-ug.pdf"},"freertos-user guide for aws"))),(0,n.kt)("h3",{id:"rtos_task"},"RTOS_Task"),(0,n.kt)("h4",{id:"\ud0dc\uc2a4\ud06c-\uc0dd\uc131"},"\ud0dc\uc2a4\ud06c \uc0dd\uc131"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"FreeRTOS \uae30\ubc18 \ud0dc\uc2a4\ud06c \uc0dd\uc131 \uc2dc ",(0,n.kt)("a",{parentName:"li",href:"https://arsviator.blogspot.com/2019/04/esp32-use-multicore-on-esp32.html"},"\uc6b0\uc120\uc21c\uc704, \ucf54\uc5b4\ub97c \uc120\ud0dc\uac1b\uc5ec \ud0dc\uc2a4\ud06c\ub97c \uc0dd\uc131"),"\ud560 \uc218 \uc788\ub2e4.")),(0,n.kt)("h4",{id:"\uc6b0\uc120\uc21c\uc704-\uc124\uc815"},"\uc6b0\uc120\uc21c\uc704 \uc124\uc815"),(0,n.kt)("h5",{id:"freertos"},"FreeRTOS"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://slowbootkernelhacks.blogspot.com/2020/12/esp32-freertos.html"},"ESP32\ub85c \uc54c\uc544\ubcf4\ub294 FreeRTOS")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/aws/amazon-freertos"},"Amazon FreeRTOS for AWS Cloud")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://velog.io/@embeddedjune/FreeRTOS-%EC%A0%95%EB%A6%AC-%E5%AE%8C.-%EC%B4%9D%EC%A7%91%EB%B3%B8"},"FreeRTOS \uc815\ub9ac - good")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://velog.io/@embeddedjune/FreeRTOS-%EC%A0%95%EB%A6%AC-1.-FreeRTOS%EC%99%80-Task"},"FreeRTOS \uc815\ub9ac 1. FreeRTOS\uc640 Task"))),(0,n.kt)("h5",{id:"mbed"},"mbed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/tag/arm_mbed_rtos"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=pu8pM536uks&t=5025s"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d 1\uc77c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=IrZLFODeFoM"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d 2\uc77c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=BH4AFFJqh_Q"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d 3\uc77c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=QPpxXiEKAMI"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d 4\uc77c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=KFSLiFLvuO4"},"MBED OS(RTOS \ud3ec\ud568) \uc6cc\ud06c\uc20d 5\uc77c")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/tag/arm_mbed?page=3"},"Arm MBED Programming Basics"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1523"},"Arm MBED Programming Basics 01\uac15")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1523"},"Arm MBED Programming Basics 02\uac15 \ub514\ubc14\uc774\uc2a4 \uc5f0\uacb0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1524"},"Arm MBED Programming Basics 03\uac15")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1525"},"Arm MBED Programming Basics 04\uac15 \ud504\ub85c\uadf8\ub7a8 \uae30\ubcf8 \uad6c\uc870")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1526"},"Arm MBED Programming Basics 05\uac15 \ub514\uc9c0\ud138 \ucd9c\ub825")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1527"},"Arm MBED Programming Basics 06\uac15 \ub514\uc9c0\ud138 \uc785\ub825")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1528"},"Arm MBED Programming Basics 07\uac15 PwmOut")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1529"},"Arm MBED Programming Basics 08\uac15 \uc544\ub0a0\ub85c\uadf8 \ucd9c\ub825AnalogOut")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1530"},"Arm MBED Programming Basics 09\uac15 \uc544\ub0a0\ub85c\uadf8 \uc785\ub825 AnalogIn")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1531"},"Arm MBED Programming Basics 10\uac15 BusOut")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1532"},"Arm MBED Programming Basics 11\uac15 BusIn")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1533"},"Arm MBED Programming Basics 12\uac15 \ud1a0\uc591\uc218\ubd84\uc13c\uc11c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1534"},"Arm MBED Programming Basics 13\uac15 \uc801\uc678\uc120\uc778\uccb4\uac10\uc9c0\uc13c\uc11cPIR")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1535"},"Arm MBED Programming Basics 14\uac15 \uc870\ub3c4\uc13c\uc11cCDS")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1536"},"Arm MBED Programming Basics 15\uac15 \uac00\uc2a4\uc13c\uc11c \ubd88\uaf43\uac10\uc9c0\uc13c\uc11c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1537"},"Arm MBED Programming Basics 16\uac15 \uac70\ub9ac\uce21\uc815\uc13c\uc11c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1538"},"Arm MBED Programming Basics 17\uac15 \uc628\uc2b5\ub3c4\uc13c\uc11c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1539"},"Arm MBED Programming Basics 18\uac15 \ud53c\uc5d0\uc870\ubd80\uc800")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1540"},"Arm MBED Programming Basics 19\uac15 \ub9b4\ub808\uc774")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1541"},"Arm MBED Programming Basics 20\uac15 \uc9c4\ub3d9\uc13c\uc11c\uc640\ubaa8\ud130, IR\uc7a5\uc560\ubb3c\uc13c\uc11c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1542"},"Arm MBED Programming Basics 21\uac15 UARTBoardToPc \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1543"},"Arm MBED Programming Basics 22\uac15 UARTBoardToBoard \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1544"},"Arm MBED Programming Basics 23\uac15 I2C LCD\ud65c\uc6a9 \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1545"},"Arm MBED Programming Basics 24\uac15 I2C OLED\ud65c\uc6a9 \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1546"},"Arm MBED Programming Basics 25\uac15 SPI LCD\ud65c\uc6a9 \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1547"},"Arm MBED Programming Basics 26\uac15 SPI LCD\ud65c\uc6a9 \ud1b5\uc2e0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1548"},"Arm MBED Programming Basics 27\uac15 7Segment1digit \uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1549"},"Arm MBED Programming Basics 28\uac15 7Segment4digit \uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1550"},"Arm MBED Programming Basics 29\uac15 LED Matrix8X8\uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1551"},"Arm MBED Programming Basics 30\uac15 RTC(DS1302)\uc0ac\uc6a9\ud558\uae30")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1552"},"Arm MBED Programming Basics 31\uac15 \uc778\ud130\ub7fd\ud2b8Interrupt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1553"},"Arm MBED Programming Basics 32\uac15 \ubc18\ubcf5\uc2e4\ud589Ticker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1554"},"Arm MBED Programming Basics 33\uac15 \uc2dc\uac04 \uce21\uc815 Timer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1555"},"Arm MBED Programming Basics 34\uac15 \uc2dc\uac04 \uc885\ub8ccTimeout")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1556"},"Arm MBED Programming Basics 35\uac15 \uc11c\ubcf4Servo\ubaa8\ud130")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1557"},"Arm MBED Programming Basics 36\uac15 \uc2a4\ud14c\ud551Stepping\ubaa8\ud130")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1558"},"Arm MBED Programming Basics 37\uac15 DC\ubaa8\ud130")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1559"},"Arm MBED Programming Basics 38\uac15 OnBoardSensor L475")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1560"},"Arm MBED Programming Basics 39\uac15 \uc2a4\ub808\ub4dc")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gcamp.tistory.com/1561"},"Arm MBED Programming Basics 40\uac15 \uc2a4\ub808\ub4dc \ud1b5\uc2e0"))))))}u.isMDXComponent=!0},9602:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_gpio1_pinmap-7e35a08be2be04140abbfce79824858c.png"},4044:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_gpio2_interface-fb3f2c5038c9e110965ebbddb79664af.png"},3757:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_gpio3_prj_create-62f2f1536217076193ad8db0d233a97a.png"},2441:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_gpio4_prj_create-8c6b31271dfd0d67e03780fc9dfbef97.png"},4577:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_gpio5_prj_create-e86dba2a1ec6da33a4354f52eb06b3fd.png"},7155:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_fw_uart1_interface-9f6b41d5d808d467b11ce5310ead38e3.png"},9005:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_module_mcu_esp32_devKitC_v4_board-ee5adafa9232993cb5756895c9fcb2ec.png"},7033:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_module_mcu_esp32_devkitC_v4_pinout-d9a15f3a32f6ec0e3bd9813d34a1b00b.png"},1807:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/mbd_hw_module_mcu_memory_map-899902b24b5ef71de82c6f7b7424639f.png"}}]);