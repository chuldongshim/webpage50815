"use strict";(self.webpackChunkwebpage_re=self.webpackChunkwebpage_re||[]).push([[8109],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=m(n),c=r,k=d["".concat(o,".").concat(c)]||d[c]||s[c]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5695:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const l={id:"wiper_devenv",title:"\uae30\ubcf8\ub3d9\uc791\ud655\uc778"},i=void 0,p={unversionedId:"sideprj/wiper/wiper_devenv",id:"sideprj/wiper/wiper_devenv",title:"\uae30\ubcf8\ub3d9\uc791\ud655\uc778",description:"---",source:"@site/docs/3_sideprj/2_wiper/b_wiper_devenv.md",sourceDirName:"3_sideprj/2_wiper",slug:"/sideprj/wiper/wiper_devenv",permalink:"/webpage50815/docs/sideprj/wiper/wiper_devenv",draft:!1,editUrl:"https://github.com/chuldongshim/webpage50815/docs/3_sideprj/2_wiper/b_wiper_devenv.md",tags:[],version:"current",frontMatter:{id:"wiper_devenv",title:"\uae30\ubcf8\ub3d9\uc791\ud655\uc778"}},o={},m=[{value:"MCU - S32K144",id:"mcu---s32k144",level:2},{value:"\uc8fc\uc694\ud2b9\uc9d5",id:"\uc8fc\uc694\ud2b9\uc9d5",level:3},{value:"EVB Board",id:"evb-board",level:3},{value:"RCP \ub3d9\uc791\ud655\uc778",id:"rcp-\ub3d9\uc791\ud655\uc778",level:2},{value:"Simulink \uae30\ucd08",id:"simulink-\uae30\ucd08",level:3},{value:"GPIO-ADC-PWM-QD",id:"gpio-adc-pwm-qd",level:3},{value:"Timer-PWM-IC",id:"timer-pwm-ic",level:3},{value:"GPIO-ADC-PWM-QD-IC",id:"gpio-adc-pwm-qd-ic",level:3},{value:"Single\ubaa8\ud130 \uad6c\ub3d9",id:"single\ubaa8\ud130-\uad6c\ub3d9",level:3},{value:"Dual\ubaa8\ud130 \uad6c\ub3d9",id:"dual\ubaa8\ud130-\uad6c\ub3d9",level:3}],u={toc:m};function s(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud0c0\uac9f\ubcf4\ub4dc(s32k144, tms320f28069)\ub97c \uc774\uc6a9\ud55c \uc81c\uc5b4\uae30 RCP(Rapid Control Prototyping) \uad6c\ud604 \ubc0f \ub3d9\uc791\ud655\uc778",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Matlab Stateflow\ub97c \uc774\uc6a9\ud55c \uc81c\uc5b4 \ub85c\uc9c1 \ud504\ub85c\uadf8\ub798\ubc0d"),(0,r.kt)("li",{parentName:"ul"},"Hardware dependent device driver interface\ub97c \ud1b5\ud55c peripheral control(Timer/Interrupt, ADC, Port IO \ub4f1)"))),(0,r.kt)("li",{parentName:"ul"},"Matlab/Simulink\ub97c \ud1b5\ud55c \uc81c\uc5b4\uae30 \uc2dc\ubbac\ub808\uc774\uc158 \ud655\uc778 \ubc0f \ubaa8\ub378 \ucf54\ub4dc \uc790\ub3d9\uc0dd\uc131(AutoCode Generation)"),(0,r.kt)("li",{parentName:"ul"},"\uc7a5\uc560\ubb3c \uac10\uc9c0 \uc2dc \ubc18\uc804 \uc54c\uace0\ub9ac\uc998/\ub85c\uc9c1 \uc2dc\ubbac\ub808\uc774\uc158")),(0,r.kt)("h2",{id:"mcu---s32k144"},"MCU - S32K144"),(0,r.kt)("h3",{id:"\uc8fc\uc694\ud2b9\uc9d5"},"\uc8fc\uc694\ud2b9\uc9d5"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nxp.com/docs/en/supporting-information/S32K1_Overview_Presentation.pdf"},"S32K1_Overview_Presentation pdf"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nxp.com/docs/en/application-note/AN12218.pdf"},"S32K1xx Bootloader pdf"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nxp.com/docs/en/application-note/AN12323.pdf"},"S32K1xx Firmware updates pdf"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.programmersought.com/article/36523455668/"},"S32 SDK software architecture")),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(7843).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<MCU Spec(Brief)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"High performance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ARM Cortex M4F up to 112MHz w FPU"),(0,r.kt)("li",{parentName:"ul"},"eDMA from 57xxx family"))),(0,r.kt)("li",{parentName:"ul"},"Memory",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("u",null,"Up to 2 MB program flash memory with ECC")),(0,r.kt)("li",{parentName:"ul"},"64 KB FlexNVM for data flash memory with ECC and EEPROM emulation"),(0,r.kt)("li",{parentName:"ul"},"Up to 256 KB SRAM with ECC"),(0,r.kt)("li",{parentName:"ul"},"Up to 4 KB of FlexRAM for use as SRAM or EEPROM emulation"),(0,r.kt)("li",{parentName:"ul"},"Up to 4 KB Code cache"))),(0,r.kt)("li",{parentName:"ul"},"Software Friendly Architecture",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"High RAM to Flash ratio"),(0,r.kt)("li",{parentName:"ul"},"Independent CPU and peripheral clocking"),(0,r.kt)("li",{parentName:"ul"},"48MHz 1% IRC \u2013 no PLL init required in LP"),(0,r.kt)("li",{parentName:"ul"},"Registers maintained in all modes"),(0,r.kt)("li",{parentName:"ul"},"Programmable triggers for ADC no SW delay counters or extra interrupts"))),(0,r.kt)("li",{parentName:"ul"},"Functional safety",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ISO26262 support for ASIL B or higher"),(0,r.kt)("li",{parentName:"ul"},"Memory Protection Unit, ECC on Flash/Dataflash and RAM"),(0,r.kt)("li",{parentName:"ul"},"Independent internal OSC for Watchdog"),(0,r.kt)("li",{parentName:"ul"},"Diversity between ADC and ACMP, SPI/SCI and FlexIO"),(0,r.kt)("li",{parentName:"ul"},"Core self test libraries"),(0,r.kt)("li",{parentName:"ul"},"Scalable LVD protection, CRC"))),(0,r.kt)("li",{parentName:"ul"},"Low power",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Low leakage technology"),(0,r.kt)("li",{parentName:"ul"},"Multiple VLP modes and IRC combos"),(0,r.kt)("li",{parentName:"ul"},"Wake-up on analog thresholds"))),(0,r.kt)("li",{parentName:"ul"},"Security",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CSEc (SHE-spec)")))),(0,r.kt)("h3",{id:"evb-board"},"EVB Board"),(0,r.kt)("p",null,"[Pinmap]"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(4516).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<S32K144EVB-Q100 pinout>")),(0,r.kt)("p",null,"[Interface]"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(4731).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<s32k144 evb interface>")),(0,r.kt)("p",null,"[NXP Community \ucc38\uace0\uc790\ub8cc]"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://community.nxp.com/t5/NXP-Model-Based-Design-Tools/S32K-Tutorials/m-p/719950"},"S32K-Tutorials \ucc38\uace0")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"LOW POWER MODES",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/462168"},"S32K1xx - Low Power Modes Introduction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/454028"},"How to put S32K MCU into sleep (low power mode)?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/videos/7966"},"Video Link : 7966")))),(0,r.kt)("li",{parentName:"ul"},"COMMUNICATIONS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/465130"},"How to Build and Configure a CAN with S32K to Emulate Automotive Body Control Infrastructure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/462157"},"FlexIO - Flex your muscles with the latest MBDToolbox release")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/videos/7851"},"Video Link : 7851")))),(0,r.kt)("li",{parentName:"ul"},"MOTOR CONTROL",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/464336"},"3-Phase PMSM Control Workshop with NXP's Model-Based Design Toolbox")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/460314"},"How to Spin a Motor with NPX's MOTORGD, S32K and MPC5744P")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/docs/DOC-334351"},"Motor Control and Communication Demo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/472243"},"How to Squeeze Every Last Drop of Performance Out of SIMULINK Models with AMMCLIB")))),(0,r.kt)("li",{parentName:"ul"},"SCHEDULING",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://community.nxp.com/thread/488575"},"Multitasking on S32K144 MBDT Simulink"))))),(0,r.kt)("h2",{id:"rcp-\ub3d9\uc791\ud655\uc778"},"RCP \ub3d9\uc791\ud655\uc778"),(0,r.kt)("p",null,"s32k144 toolbox\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc608\uc81c\ub97c \ud1b5\ud574 s32k144 mcu peripherals \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ub85c\uc9c1\uc81c\uc5b4 \uc2dc : SysTick, Timer, ExtInt, GPIO"),(0,r.kt)("li",{parentName:"ul"},"\ubaa8\ud130\uc81c\uc5b4 \uc2dc : PWM, ADC, Quadrature Decoder"),(0,r.kt)("li",{parentName:"ul"},"\ud1b5\uc2e0\uc81c\uc5b4 \uc2dc : UART(Rx Interrupt), FreeMASTER, SPI")),(0,r.kt)("h3",{id:"simulink-\uae30\ucd08"},"Simulink \uae30\ucd08"),(0,r.kt)("a",{href:"/assets/mbd/Simulink_user_manual.html",target:"_blank"},"\uc2dc\ubbac\ub9c1\ud06c \uae30\ucd08 \uc0ac\uc6a9\ubc95"),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("p",null,"Simulink Data Type"),(0,r.kt)("p",null,"\uc2dc\ubbac\ub9c1\ud06c\ub294 \ud0c0\uc785 \uc7ac\uc120\uc5b8\uc744 \ud1b5\ud574 \ubaa8\ub4e0 \ud0c0\uac9f\u3147\n\uc2dc\ubbac\ub9c1\ud06c\ub97c \ud1b5\ud574 \uc0dd\uc131\ub418\ub294 \ucf54\ub4dc\ub294 \ubaa8\ub4e0 \ud0c0\uac9f\uc5d0\uc11c \ub3d9\uc791\ub420 \uc218 \uc788\ub3c4\ub85d \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc7ac\uc120\uc5b8\ud558\uc5ec \uc0ac\uc6a9\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc989, int\ud615\uc73c\ub85c int32_t\ub97c \uc0ac\uc6a9\ud558\ub294 \ud0c0\uac9f\uc758 \uacbd\uc6b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"typedef int32_t int32_T"),"\uc640 \uac19\uc774 \ud0c0\uc785\uc744 \uc7ac\uc120\uc5b8\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/*=======================================================================*\n * Fixed width word size data types:                                     *\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\n *=======================================================================*/\ntypedef signed char int8_T;\ntypedef unsigned char uint8_T;\ntypedef short int16_T;\ntypedef unsigned short uint16_T;\ntypedef int int32_T;\ntypedef unsigned int uint32_T;\ntypedef float real32_T;\ntypedef double real64_T;\n")),(0,r.kt)("p",null,"\uc2dc\ubbac\ub9c1\ud06c\uc5d0\uc11c \uc18c\uc218\uc810 \ud45c\ud604\uc744 single/double\ub85c \ud45c\ud604\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"float \u2013 32bit (4 byte), \ub2e8\uc815\ub3c4(single precision)\ndouble \u2013 64bit (8 byte), \ubc30\uc815\ub3c4(double precision)\nuint32 \u2013 32bit (4 byte), integer\n")),(0,r.kt)("h3",{id:"gpio-adc-pwm-qd"},"GPIO-ADC-PWM-QD"),(0,r.kt)("p",null,"\ud558\ub4dc\uc6e8\uc5b4 \uc778\ud130\ud398\uc774\uc2a4"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(2059).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<s32k144 evb interface>")),(0,r.kt)("p",null,"C:\\Users\\User\\Documents\\MATLAB\\Add-Ons\\Toolboxes\\NXP_MBDToolbox_S32K1xx\\S32_Examples\\s32k14x\\gpio\\gpio_isr_control_s32k144.slx"),(0,r.kt)("p",null,"\uc2dc\ubbac\ub9c1\ud06c \ubaa8\ub378\uc744 \ud1b5\ud574 GPIO, ADC, PWM, QD(Quadrature Decoder) \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(1145).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<nxp_s32k144_gpio_pwm_adc_qd.slx>")),(0,r.kt)("h3",{id:"timer-pwm-ic"},"Timer-PWM-IC"),(0,r.kt)("p",null,"\ud558\ub4dc\uc6e8\uc5b4 \uc778\ud130\ud398\uc774\uc2a4"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(5541).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<s32k144 evb interface>")),(0,r.kt)("p",null,"\uc2dc\ubbac\ub9c1\ud06c \ubaa8\ub378\uc744 \ud1b5\ud574 Timer, PWM, IC(Input Capture) \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(6513).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<nxp_s32k144_gpio_pwm_ic.slx>")),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"FTM0_PWM, FTM1_IC \ubaa8\ub450 System Clock(80MHz)\ub97c \uc0ac\uc6a9\ud558\ub294\ub370, FTM0_PWM(\ud384\uc2a4\ubc1c\uc0dd) 1 Count Time\uc774 FTM1_IC(\ud384\uc2a4\uce21\uc815) 1 Count time\ubcf4\ub2e4 \uae38\uc5b4\uc57c IC\ub97c \ud1b5\ud574 PWM Period\ub97c \uce21\uc815\ud560 \uc218 \uc788\ub2e4.\n\ub530\ub77c\uc11c PWM Prescaler >= IC Prescaler\ub85c \uc124\uc815\ub418\uc5b4\uc57c \ud55c\ub2e4.\n\uc608\uc81c\uc5d0\uc11c\ub294 PWM/IC \ubaa8\ub450 \ub3d9\uc77c\ud558\uac8c 128 \ubd84\uc8fc\ud558\ubbc0\ub85c PWM Tick\uac12(Period Value)\uacfc IC\ub85c \uce21\uc815\ud55c Tick\uac12(Period)\uc774 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.")),(0,r.kt)("h3",{id:"gpio-adc-pwm-qd-ic"},"GPIO-ADC-PWM-QD-IC"),(0,r.kt)("p",null,"\ud558\ub4dc\uc6e8\uc5b4 \uc778\ud130\ud398\uc774\uc2a4"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(9085).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<s32k144 evb interface>")),(0,r.kt)("p",null,"\uc2dc\ubbac\ub9c1\ud06c \ubaa8\ub378\uc744 \ud1b5\ud574 GPIO, ADC, PWM, QD(Quadrature Decoder), IC(Input Capture) \ub3d9\uc791\uc744 \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\uac00\ubcc0\uc800\ud56d\uc73c\ub85c PWM Duty \uc124\uc815"),(0,r.kt)("li",{parentName:"ul"},"SW2(dn), SW3(up) \uc785\ub825 \uc2dc PWM/Dir \ucd9c\ub825"),(0,r.kt)("li",{parentName:"ul"},"QD\ub97c \ud1b5\ud574 Hall\ud384\uc2a4 \uce74\uc6b4\ud2b8"),(0,r.kt)("li",{parentName:"ul"},"IC\ub97c \ud1b5\ud574 Hall\ud384\uc2a4 Duty \uce21\uc815\uc744 \ud1b5\ud55c \uc18d\ub3c4\uacc4\uc0b0")),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(6619).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<nxp_s32k144_gpio_pwm_adc_qd_ic.slx>")),(0,r.kt)("h3",{id:"single\ubaa8\ud130-\uad6c\ub3d9"},"Single\ubaa8\ud130 \uad6c\ub3d9"),(0,r.kt)("p",null,"\ub3d9\uc791\ud655\uc778(21.11.11 \uc644\ub8cc)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ENA, EHB\ub294 \uac01\uac01 Half-Bridge_A\uc640 Half-Bridge_B\ub97c Enable \uc2dc\ud0a4\ub294 \uc2e0\ud638\uc774\ubbc0\ub85c 5V\ub97c \uc778\uac00\ud558\uc5ec \ud56d\uc0c1 Enable \uc2dc\ucf1c \ub193\ub294\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"PWM\uc744 \uc778\uac00\ud55c \uc0c1\ud0dc\uc5d0\uc11c INA\uc640 INB\ub97c \ubc18\uc804\ud558\uc5ec \ucd9c\ub825\ud558\uba74 DC\ubaa8\ud130 \uc815/\uc5ed \ud68c\uc804\uc774 \uac00\ub2a5\ud558\uba70, CS\ud540\uc744 \ud1b5\ud574 \uc804\ub958\uc5d0 \ube44\ub840\ud558\ub294 \uc804\uc555\uc744 \uce21\uc815\ud558\uac70\ub098 ADC\ubcc0\ud658\ud558\uc5ec \uc804\ub958\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"Pin_6(Current Sense Disable, Active High)\uc744 Low or Open\uc0c1\ud0dc\ub85c \ub9cc\ub4e4\uba74 External Register\ub97c Pin_8(Current Sense)\uc5d0 \uc5f0\uacb0\ud558\uc5ec \uc804\ub958\uc5d0 \ube44\ub840\ud558\ub294 \uc804\uc555\uc744 ADC \ud560 \uc218 \uc788\ub2e4.(Shield\uc5d0 1K\uc800\ud56d Pull-Down\ub418\uc5b4 \uc788\uace0, LPF\ub3c4 \ub2ec\ub824 \uc788\uc5b4\uc11c \ubc14\ub85c ADC \uac00\ub2a5\ud568.")),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(7262).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<VNH5019 \uc778\ud130\ud398\uc774\uc2a4>")),(0,r.kt)("p",null,"\ub3d9\uc791\ud655\uc778 \uc2dc \uc0ac\uc6a9\ud55c \uc2dc\ubbac\ub9c1\ud06c \ubaa8\ub378 : nxp_s32k144_gpio_pwm_ic_single_VNH5019.slx"),(0,r.kt)("h3",{id:"dual\ubaa8\ud130-\uad6c\ub3d9"},"Dual\ubaa8\ud130 \uad6c\ub3d9"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(362).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<VNH5019 Motor1 \uc778\ud130\ud398\uc774\uc2a4>")),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:n(8569).Z,width:"450",alt:"Example banner"}),(0,r.kt)("br",null),(0,r.kt)("em",null,"<VNH5019 Motor2 \uc778\ud130\ud398\uc774\uc2a4>")),(0,r.kt)("p",null,"\ub3d9\uc791\ud655\uc778 \uc2dc \uc0ac\uc6a9\ud55c \uc2dc\ubbac\ub9c1\ud06c \ubaa8\ub378 : nxp_s32k144_gpio_pwm_ic_dual_VNH5019.slx"))}s.isMDXComponent=!0},362:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_fw_driver_dual_vnh5019_m1_Interface-03fdffa6cabf4ca22d8b7641065275f0.png"},8569:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_fw_driver_dual_vnh5019_m2_Interface-52d9873f8c549c115e54613141db9d52.png"},7262:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_fw_driver_single_vnh5019_interface-689d71cee5bece0a492ade8e580a16b7.png"},7843:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_s32k14x_1_mcu_brief-9110e8b158064620e26ddd66decbbde0.png"},4516:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_s32k14x_2_evb_pinout-4dc75966f2313492b54b1d1be6dcc47a.png"},4731:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_s32k14x_3_evb_interface-64835bfdb6cf5a992fe159194bbf82c8.png"},1145:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_1_basic_ex-1a860938b3a55e2338b60e816a5a0562.png"},2059:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_1_basic_ex_interface-aea116ae9ad90f6ec5d5c64c471ede39.png"},6513:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_2_basic_ex-1cf1c3b29de6b8400643934893fb36f0.png"},5541:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_2_basic_ex_interface-8091e8066d7daa03a50c0028c55627c7.png"},6619:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_3_basic_ex-4eaadce86b8db5eacb3b1d8a98735c7d.png"},9085:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/mbd_hw_nxp_simulink_3_basic_ex_interface-2769dcff6495fb3170b33370de5c8f6c.png"}}]);